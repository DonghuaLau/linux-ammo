
redis-src=/root/projects/redis-5.0.8/src CD=. filter="*" {
 Makefile
 adlist.c
 ae.c
 ae_epoll.c
 ae_evport.c
 ae_kqueue.c
 ae_select.c
 anet.c
 aof.c
 bio.c
 bitops.c
 blocked.c
 childinfo.c
 cluster.c
 config.c
 crc16.c
 crc64.c
 db.c
 debug.c
 defrag.c
 dict.c
 endianconv.c
 evict.c
 expire.c
 geo.c
 geohash.c
 geohash_helper.c
 hyperloglog.c
 intset.c
 latency.c
 lazyfree.c
 listpack.c
 localtime.c
 lolwut.c
 lolwut5.c
 lzf_c.c
 lzf_d.c
 memtest.c
 mkreleasehdr.sh
 module.c
 multi.c
 networking.c
 notify.c
 object.c
 pqsort.c
 pubsub.c
 quicklist.c
 rand.c
 rax.c
 rdb.c
 redis-benchmark.c
 redis-check-aof.c
 redis-check-rdb.c
 redis-cli.c
 redis-trib.rb
 release.c
 replication.c
 rio.c
 scripting.c
 sds.c
 sentinel.c
 server.c
 setproctitle.c
 sha1.c
 siphash.c
 slowlog.c
 sort.c
 sparkline.c
 syncio.c
 t_hash.c
 t_list.c
 t_set.c
 t_stream.c
 t_string.c
 t_zset.c
 util.c
 valgrind.sup
 ziplist.c
 zipmap.c
 zmalloc.c
 adlist.h
 ae.h
 anet.h
 asciilogo.h
 atomicvar.h
 bio.h
 cluster.h
 config.h
 crc64.h
 debugmacro.h
 dict.h
 endianconv.h
 fmacros.h
 geo.h
 geohash.h
 geohash_helper.h
 help.h
 intset.h
 latency.h
 listpack.h
 listpack_malloc.h
 lzf.h
 lzfP.h
 pqsort.h
 quicklist.h
 rand.h
 rax.h
 rax_malloc.h
 rdb.h
 redisassert.h
 redismodule.h
 rio.h
 sds.h
 sdsalloc.h
 server.h
 sha1.h
 slowlog.h
 solarisfixes.h
 sparkline.h
 stream.h
 testhelp.h
 util.h
 version.h
 ziplist.h
 zipmap.h
 zmalloc.h
 modules=modules {
  Makefile
  gendoc.rb
  helloblock.c
  hellocluster.c
  hellodict.c
  hellotimer.c
  hellotype.c
  helloworld.c
  testmodule.c
 }
}
ceph=/root/projects/ceph-13.2.8/src CD=. filter="*.h *.c *.hpp *.cc *.cpp *.lua *.md *.conf *akefile* INSTALL *.sh *.ac configure* *.m4 *.in *.py *.rb *.tcl" {
 perf_histogram.h
 btrfs_ioc_test.c
 ceph_ver.c
 ceph_fuse.cc
 ceph_mds.cc
 ceph_mgr.cc
 ceph_mon.cc
 ceph_osd.cc
 ceph_syn.cc
 cls_acl.cc
 cls_crypto.cc
 krbd.cc
 libcephfs.cc
 librados-config.cc
 logrotate.conf
 sample.ceph.conf
 ceph-osd-prestart.sh
 ceph_common.sh
 loadclass.sh
 mrgw.sh
 mstart.sh
 mstop.sh
 multi-dump.sh
 stop.sh
 unittest_bufferlist.sh
 vstart.sh
 ceph-coverage.in
 ceph-crash.in
 ceph-debugpack.in
 ceph-post-file.in
 ceph.in
 init-ceph.in
 arch=arch {
  arm.h
  intel.h
  ppc.h
  probe.h
  arm.c
  intel.c
  ppc.c
  probe.cc
 }
 auth=auth {
  Auth.h
  AuthAuthorizeHandler.h
  AuthClientHandler.h
  AuthMethodList.h
  AuthServiceHandler.h
  AuthSessionHandler.h
  Crypto.h
  KeyRing.h
  RotatingKeyRing.h
  AuthAuthorizeHandler.cc
  AuthClientHandler.cc
  AuthMethodList.cc
  AuthServiceHandler.cc
  AuthSessionHandler.cc
  Crypto.cc
  KeyRing.cc
  RotatingKeyRing.cc
  cephx=cephx {
   CephxAuthorizeHandler.h
   CephxClientHandler.h
   CephxKeyServer.h
   CephxProtocol.h
   CephxServiceHandler.h
   CephxSessionHandler.h
   CephxAuthorizeHandler.cc
   CephxClientHandler.cc
   CephxKeyServer.cc
   CephxProtocol.cc
   CephxServiceHandler.cc
   CephxSessionHandler.cc
  }
  none=none {
   AuthNoneAuthorizeHandler.h
   AuthNoneClientHandler.h
   AuthNoneProtocol.h
   AuthNoneServiceHandler.h
   AuthNoneSessionHandler.h
   AuthNoneAuthorizeHandler.cc
  }
  unknown=unknown {
   AuthUnknownAuthorizeHandler.h
   AuthUnknownClientHandler.h
   AuthUnknownProtocol.h
   AuthUnknownServiceHandler.h
   AuthUnknownSessionHandler.h
   AuthUnknownAuthorizeHandler.cc
  }
 }
 bash_completion=bash_completion {
 }
 blkin=blkin {
 }
 ceph-detect-init=ceph-detect-init {
  run-tox.sh
  MANIFEST.in
  setup.py
  ceph_detect_init=ceph_detect_init {
   __init__.py
   exc.py
   main.py
   alpine=alpine {
    __init__.py
   }
   alt=alt {
    __init__.py
   }
   arch=arch {
    __init__.py
   }
   centos=centos {
    __init__.py
   }
   debian=debian {
    __init__.py
   }
   docker=docker {
    __init__.py
   }
   fedora=fedora {
    __init__.py
   }
   freebsd=freebsd {
    __init__.py
   }
   gentoo=gentoo {
    __init__.py
   }
   oraclevms=oraclevms {
    __init__.py
   }
   rhel=rhel {
    __init__.py
   }
   suse=suse {
    __init__.py
   }
  }
  integration=integration {
   test_main.py
  }
  tests=tests {
   test_all.py
  }
 }
 ceph-disk=ceph-disk {
  run-tox.sh
  MANIFEST.in
  setup.py
  ceph_disk=ceph_disk {
   __init__.py
   main.py
  }
  tests=tests {
   ceph-disk.sh
   test_main.py
   test_prepare.py
  }
 }
 ceph-volume=ceph-volume {
  MANIFEST.in
  setup.py
  ceph_volume=ceph_volume {
   __init__.py
   configuration.py
   decorators.py
   exceptions.py
   log.py
   main.py
   process.py
   terminal.py
   api=api {
    __init__.py
    lvm.py
   }
   devices=devices {
    __init__.py
    lvm=lvm {
     __init__.py
     activate.py
     batch.py
     common.py
     create.py
     listing.py
     main.py
     prepare.py
     trigger.py
     zap.py
     strategies=strategies {
      __init__.py
      bluestore.py
      filestore.py
      strategies.py
      validators.py
     }
    }
    simple=simple {
     __init__.py
     activate.py
     main.py
     scan.py
     trigger.py
    }
   }
   inventory=inventory {
    __init__.py
    main.py
   }
   systemd=systemd {
    __init__.py
    main.py
    systemctl.py
   }
   tests=tests {
    __init__.py
    conftest.py
    test_configuration.py
    test_decorators.py
    test_inventory.py
    test_main.py
    test_process.py
    test_terminal.py
    api=api {
     test_lvm.py
    }
    devices=devices {
     __init__.py
     test_zap.py
     lvm=lvm {
      __init__.py
      test_activate.py
      test_batch.py
      test_create.py
      test_listing.py
      test_prepare.py
      test_trigger.py
      test_zap.py
      strategies=strategies {
       __init__.py
       test_bluestore.py
       test_filestore.py
       test_validate.py
      }
     }
     simple=simple {
      test_activate.py
      test_scan.py
      test_trigger.py
     }
    }
    functional=functional {
     README.md
     batch=batch {
      centos7=centos7 {
       bluestore=bluestore {
        mixed-type=mixed-type {
         group_vars=group_vars {
         }
        }
        mixed-type-dmcrypt=mixed-type-dmcrypt {
         group_vars=group_vars {
         }
        }
        mixed-type-dmcrypt-explicit=mixed-type-dmcrypt-explicit {
         group_vars=group_vars {
         }
        }
        mixed-type-explicit=mixed-type-explicit {
         group_vars=group_vars {
         }
        }
        single-type=single-type {
         group_vars=group_vars {
         }
        }
        single-type-dmcrypt=single-type-dmcrypt {
         group_vars=group_vars {
         }
        }
       }
       filestore=filestore {
        mixed-type=mixed-type {
         group_vars=group_vars {
         }
        }
        mixed-type-dmcrypt=mixed-type-dmcrypt {
         group_vars=group_vars {
         }
        }
        mixed-type-dmcrypt-explicit=mixed-type-dmcrypt-explicit {
         group_vars=group_vars {
         }
        }
        mixed-type-explicit=mixed-type-explicit {
         group_vars=group_vars {
         }
        }
        single-type=single-type {
         group_vars=group_vars {
         }
        }
        single-type-dmcrypt=single-type-dmcrypt {
         group_vars=group_vars {
         }
        }
       }
      }
      playbooks=playbooks {
      }
      xenial=xenial {
       bluestore=bluestore {
        single-type=single-type {
         group_vars=group_vars {
         }
        }
        single-type-dmcrypt=single-type-dmcrypt {
         group_vars=group_vars {
         }
        }
       }
       filestore=filestore {
        single-type=single-type {
         group_vars=group_vars {
         }
        }
        single-type-dmcrypt=single-type-dmcrypt {
         group_vars=group_vars {
         }
        }
       }
      }
     }
     lvm=lvm {
      centos7=centos7 {
       bluestore=bluestore {
        create=create {
         group_vars=group_vars {
         }
        }
        dmcrypt=dmcrypt {
         group_vars=group_vars {
         }
        }
       }
       filestore=filestore {
        create=create {
         group_vars=group_vars {
         }
        }
        dmcrypt=dmcrypt {
         group_vars=group_vars {
         }
        }
       }
      }
      playbooks=playbooks {
      }
      xenial=xenial {
       bluestore=bluestore {
        create=create {
         group_vars=group_vars {
         }
        }
        dmcrypt=dmcrypt {
         group_vars=group_vars {
         }
        }
       }
       filestore=filestore {
        create=create {
         group_vars=group_vars {
         }
        }
        dmcrypt=dmcrypt {
         group_vars=group_vars {
         }
        }
       }
      }
     }
     playbooks=playbooks {
     }
     scripts=scripts {
      generate_ssh_config.sh
      test_unicode.sh
      vagrant_reload.sh
      vagrant_up.sh
      output.py
     }
     simple=simple {
      centos7=centos7 {
       bluestore=bluestore {
        activate=activate {
         group_vars=group_vars {
         }
         host_vars=host_vars {
         }
        }
        dmcrypt-luks=dmcrypt-luks {
         group_vars=group_vars {
         }
         host_vars=host_vars {
         }
        }
        dmcrypt-plain=dmcrypt-plain {
         group_vars=group_vars {
         }
         host_vars=host_vars {
         }
        }
       }
       filestore=filestore {
        activate=activate {
         group_vars=group_vars {
         }
         host_vars=host_vars {
         }
        }
        dmcrypt-luks=dmcrypt-luks {
         group_vars=group_vars {
         }
         host_vars=host_vars {
         }
        }
        dmcrypt-plain=dmcrypt-plain {
         group_vars=group_vars {
         }
         host_vars=host_vars {
         }
        }
       }
      }
      xenial=xenial {
       bluestore=bluestore {
        activate=activate {
         group_vars=group_vars {
         }
         host_vars=host_vars {
         }
        }
        dmcrypt-luks=dmcrypt-luks {
         group_vars=group_vars {
         }
         host_vars=host_vars {
         }
        }
        dmcrypt-plain=dmcrypt-plain {
         group_vars=group_vars {
         }
         host_vars=host_vars {
         }
        }
       }
       filestore=filestore {
        activate=activate {
         group_vars=group_vars {
         }
         host_vars=host_vars {
         }
        }
        dmcrypt-luks=dmcrypt-luks {
         group_vars=group_vars {
         }
         host_vars=host_vars {
         }
        }
        dmcrypt-plain=dmcrypt-plain {
         group_vars=group_vars {
         }
         host_vars=host_vars {
         }
        }
       }
      }
     }
     tests=tests {
      __init__.py
      conftest.py
      osd=osd {
       __init__.py
       test_osds.py
      }
     }
    }
    systemd=systemd {
     test_main.py
     test_systemctl.py
    }
    util=util {
     test_arg_validators.py
     test_device.py
     test_disk.py
     test_encryption.py
     test_prepare.py
     test_system.py
     test_util.py
    }
   }
   util=util {
    __init__.py
    arg_validators.py
    constants.py
    device.py
    disk.py
    encryption.py
    prepare.py
    system.py
    templates.py
   }
  }
 }
 civetweb=civetweb {
 }
 client=client {
  Client.h
  ClientSnapRealm.h
  Delegation.h
  Dentry.h
  Dir.h
  Fh.h
  Inode.h
  InodeRef.h
  MetaRequest.h
  MetaSession.h
  ObjecterWriteback.h
  SyntheticClient.h
  Trace.h
  UserPerm.h
  barrier.h
  fuse_ll.h
  ioctl.h
  posix_acl.h
  test_ioctls.c
  Client.cc
  ClientSnapRealm.cc
  Delegation.cc
  Dentry.cc
  Fh.cc
  Inode.cc
  MetaRequest.cc
  MetaSession.cc
  SyntheticClient.cc
  Trace.cc
  barrier.cc
  fuse_ll.cc
  posix_acl.cc
  hypertable=hypertable {
   CephBroker.h
   CephBroker.cc
  }
 }
 cls=cls {
  cephfs=cephfs {
   cls_cephfs.h
   cls_cephfs_client.h
   cls_cephfs.cc
   cls_cephfs_client.cc
  }
  hello=hello {
   cls_hello.cc
  }
  journal=journal {
   cls_journal_client.h
   cls_journal_types.h
   cls_journal.cc
   cls_journal_client.cc
   cls_journal_types.cc
  }
  lock=lock {
   cls_lock_client.h
   cls_lock_ops.h
   cls_lock_types.h
   cls_lock.cc
   cls_lock_client.cc
   cls_lock_ops.cc
   cls_lock_types.cc
  }
  log=log {
   cls_log_client.h
   cls_log_ops.h
   cls_log_types.h
   cls_log.cc
   cls_log_client.cc
  }
  lua=lua {
   cls_lua.h
   cls_lua_client.h
   cls_lua_ops.h
   cls_lua.cc
   cls_lua_client.cc
   lua_bufferlist.cc
  }
  numops=numops {
   cls_numops_client.h
   cls_numops.cc
   cls_numops_client.cc
  }
  otp=otp {
   cls_otp_client.h
   cls_otp_ops.h
   cls_otp_types.h
   cls_otp.cc
   cls_otp_client.cc
   cls_otp_types.cc
  }
  rbd=rbd {
   cls_rbd.h
   cls_rbd_client.h
   cls_rbd_types.h
   cls_rbd.cc
   cls_rbd_client.cc
   cls_rbd_types.cc
  }
  refcount=refcount {
   cls_refcount_client.h
   cls_refcount_ops.h
   cls_refcount.cc
   cls_refcount_client.cc
   cls_refcount_ops.cc
  }
  replica_log=replica_log {
   cls_replica_log_client.h
   cls_replica_log_ops.h
   cls_replica_log_types.h
   cls_replica_log.cc
   cls_replica_log_client.cc
   cls_replica_log_ops.cc
   cls_replica_log_types.cc
  }
  rgw=rgw {
   cls_rgw_client.h
   cls_rgw_const.h
   cls_rgw_ops.h
   cls_rgw_types.h
   cls_rgw.cc
   cls_rgw_client.cc
   cls_rgw_ops.cc
   cls_rgw_types.cc
  }
  sdk=sdk {
   cls_sdk.cc
  }
  statelog=statelog {
   cls_statelog_client.h
   cls_statelog_ops.h
   cls_statelog_types.h
   cls_statelog.cc
   cls_statelog_client.cc
  }
  timeindex=timeindex {
   cls_timeindex_client.h
   cls_timeindex_ops.h
   cls_timeindex_types.h
   cls_timeindex.cc
   cls_timeindex_client.cc
  }
  user=user {
   cls_user_client.h
   cls_user_ops.h
   cls_user_types.h
   cls_user.cc
   cls_user_client.cc
   cls_user_ops.cc
   cls_user_types.cc
  }
  version=version {
   cls_version_client.h
   cls_version_ops.h
   cls_version_types.h
   cls_version.cc
   cls_version_client.cc
   cls_version_types.cc
  }
 }
 common=common {
  AsyncOpTracker.h
  AsyncReserver.h
  BackTrace.h
  CachedPrebufferedStreambuf.h
  Checksummer.h
  Clock.h
  CommandTable.h
  Cond.h
  ConfUtils.h
  ContextCompletion.h
  Continuation.h
  Cycles.h
  DecayCounter.h
  EventTrace.h
  Finisher.h
  Formatter.h
  Graylog.h
  HTMLFormatter.h
  HeartbeatMap.h
  Initialize.h
  LogClient.h
  LogEntry.h
  MemoryModel.h
  Mutex.h
  OpQueue.h
  OutputDataSocket.h
  PluginRegistry.h
  PrebufferedStreambuf.h
  Preforker.h
  PrioritizedQueue.h
  PriorityCache.h
  QueueRing.h
  RWLock.h
  Readahead.h
  RefCountedObj.h
  Semaphore.h
  SloppyCRCMap.h
  SubProcess.h
  TextTable.h
  Thread.h
  Throttle.h
  Timer.h
  TracepointProvider.h
  TrackedOp.h
  Tub.h
  WeightedPriorityQueue.h
  WorkQueue.h
  address_helper.h
  admin_socket.h
  admin_socket_client.h
  align.h
  arch.h
  armor.h
  autovector.h
  bit_str.h
  blkdev.h
  bounded_key_counter.h
  ceph_argparse.h
  ceph_context.h
  ceph_crypto.h
  ceph_crypto_cms.h
  ceph_json.h
  ceph_time.h
  ceph_timer.h
  cmdparse.h
  code_environment.h
  cohort_lru.h
  common_init.h
  compiler_extensions.h
  config.h
  config_cacher.h
  config_obs.h
  convenience.h
  crc32c_aarch64.h
  crc32c_intel_baseline.h
  crc32c_intel_fast.h
  crc32c_ppc.h
  crc32c_ppc_constants.h
  debug.h
  deleter.h
  dns_resolve.h
  dout.h
  entity_name.h
  environment.h
  errno.h
  escape.h
  event_socket.h
  fd.h
  fork_function.h
  function_signature.h
  hex.h
  histogram.h
  hobject.h
  hostname.h
  inline_variant.h
  interval_map.h
  io_priority.h
  iso_8601.h
  legacy_config_opts.h
  likely.h
  linux_version.h
  lockdep.h
  lru_map.h
  mClockPriorityQueue.h
  mime.h
  module.h
  mutex_debug.h
  obj_bencher.h
  options.h
  perf_counters.h
  perf_histogram.h
  pick_address.h
  ppc-opcode.h
  reverse.h
  run_cmd.h
  safe_io.h
  scrub_types.h
  sctp_crc32.h
  secret.h
  shunique_lock.h
  signal.h
  snap_types.h
  static_assert.h
  static_ptr.h
  strtol.h
  subsys.h
  subsys_types.h
  sync_filesystem.h
  url_escape.h
  utf8.h
  valgrind.h
  version.h
  xattr.h
  zipkin_trace.h
  addr_parsing.c
  armor.c
  crc32c_aarch64.c
  crc32c_intel_baseline.c
  crc32c_intel_fast.c
  crc32c_ppc.c
  linux_version.c
  mime.c
  module.c
  reverse.c
  safe_io.c
  sctp_crc32.c
  secret.c
  utf8.c
  xattr.c
  bit_vector.hpp
  bloom_filter.hpp
  map_cacher.hpp
  random_cache.hpp
  shared_cache.hpp
  sharedptr_registry.hpp
  simple_cache.hpp
  tracked_int_ptr.hpp
  AsyncOpTracker.cc
  BackTrace.cc
  CachedPrebufferedStreambuf.cc
  ConfUtils.cc
  ContextCompletion.cc
  Cycles.cc
  DecayCounter.cc
  EventTrace.cc
  Finisher.cc
  Formatter.cc
  Graylog.cc
  HTMLFormatter.cc
  HeartbeatMap.cc
  LogClient.cc
  LogEntry.cc
  MemoryModel.cc
  Mutex.cc
  OutputDataSocket.cc
  PluginRegistry.cc
  PrebufferedStreambuf.cc
  PriorityCache.cc
  Readahead.cc
  RefCountedObj.cc
  SloppyCRCMap.cc
  TextTable.cc
  Thread.cc
  Throttle.cc
  Timer.cc
  TracepointProvider.cc
  TrackedOp.cc
  WorkQueue.cc
  address_helper.cc
  admin_socket.cc
  admin_socket_client.cc
  aix_errno.cc
  assert.cc
  bit_str.cc
  blkdev.cc
  bloom_filter.cc
  buffer.cc
  ceph_argparse.cc
  ceph_context.cc
  ceph_crypto.cc
  ceph_crypto_cms.cc
  ceph_frag.cc
  ceph_fs.cc
  ceph_hash.cc
  ceph_json.cc
  ceph_strings.cc
  ceph_time.cc
  cmdparse.cc
  code_environment.cc
  common_init.cc
  compat.cc
  config.cc
  crc32c.cc
  darwin_errno.cc
  dns_resolve.cc
  dout.cc
  dummy.cc
  entity_name.cc
  environment.cc
  errno.cc
  escape.cc
  fd.cc
  freebsd_errno.cc
  fs_types.cc
  hex.cc
  histogram.cc
  hobject.cc
  hostname.cc
  io_priority.cc
  ipaddr.cc
  iso_8601.cc
  lockdep.cc
  mempool.cc
  mutex_debug.cc
  obj_bencher.cc
  options.cc
  page.cc
  perf_counters.cc
  perf_histogram.cc
  pick_address.cc
  run_cmd.cc
  scrub_types.cc
  signal.cc
  snap_types.cc
  solaris_errno.cc
  str_list.cc
  str_map.cc
  strtol.cc
  types.cc
  url_escape.cc
  util.cc
  version.cc
 }
 compressor=compressor {
  CompressionPlugin.h
  Compressor.h
  Compressor.cc
  brotli=brotli {
   BrotliCompressor.h
   CompressionPluginBrotli.h
   BrotliCompressor.cc
   CompressionPluginBrotli.cc
  }
  lz4=lz4 {
   CompressionPluginLZ4.h
   LZ4Compressor.h
   CompressionPluginLZ4.cc
  }
  snappy=snappy {
   CompressionPluginSnappy.h
   SnappyCompressor.h
   CompressionPluginSnappy.cc
  }
  zlib=zlib {
   CompressionPluginZlib.h
   ZlibCompressor.h
   CompressionPluginZlib.cc
   ZlibCompressor.cc
  }
  zstd=zstd {
   CompressionPluginZstd.h
   ZstdCompressor.h
   CompressionPluginZstd.cc
  }
 }
 crush=crush {
  CrushCompiler.h
  CrushLocation.h
  CrushTester.h
  CrushTreeDumper.h
  CrushWrapper.h
  builder.h
  crush.h
  crush_compat.h
  crush_ln_table.h
  grammar.h
  hash.h
  mapper.h
  types.h
  builder.c
  crush.c
  hash.c
  mapper.c
  CrushCompiler.cc
  CrushLocation.cc
  CrushTester.cc
  CrushWrapper.cc
 }
 crypto=crypto {
  crypto_accel.h
  crypto_plugin.h
  isa-l=isa-l {
   isal_crypto_accel.h
   isal_crypto_plugin.h
   isal_crypto_accel.cc
   isal_crypto_plugin.cc
   isa-l_crypto=isa-l_crypto {
   }
  }
 }
 dmclock=dmclock {
  README.md
  dmclock-config.cmake.in
  benchmark=benchmark {
   README.md
   data_gen.sh
   plot_gen.sh
   run.sh
   data_parser.py
   configs=configs {
    dmc_sim_100_100.conf
    dmc_sim_8_6.conf
   }
  }
  cmake=cmake {
   modules=modules {
   }
  }
  sim=sim {
   dmc_sim_100th.conf
   dmc_sim_example.conf
   src=src {
    ConfUtils.h
    config.h
    sim_client.h
    sim_recs.h
    sim_server.h
    simulate.h
    str_list.h
    test_dmclock.h
    test_ssched.h
    ConfUtils.cc
    config.cc
    str_list.cc
    test_dmclock.cc
    test_dmclock_main.cc
    test_ssched.cc
    test_ssched_main.cc
    ssched=ssched {
     ssched_client.h
     ssched_recs.h
     ssched_server.h
    }
   }
  }
  src=src {
   dmclock_client.h
   dmclock_recs.h
   dmclock_server.h
   dmclock_util.h
   dmclock_util.cc
  }
  support=support {
   src=src {
    debug.h
    heap.h
    indirect_intrusive_heap.h
    intrusive_heap.h
    profile.h
    run_every.h
    run_every.cc
   }
   test=test {
    test_ind_intru_heap.cc
    test_indirect_intrusive_heap.cc
    test_intrusive_heap.cc
   }
  }
  test=test {
   dmcPrCtl.h
   test_dmclock_client.cc
   test_dmclock_server.cc
   test_test_client.cc
   dmtest-config.h.in
  }
 }
 doc=doc {
 }
 erasure-code=erasure-code {
  ErasureCode.h
  ErasureCodeInterface.h
  ErasureCodePlugin.h
  ErasureCode.cc
  ErasureCodePlugin.cc
  isa=isa {
   ErasureCodeIsa.h
   ErasureCodeIsaTableCache.h
   ErasureCodePluginIsa.h
   xor_op.h
   ErasureCodeIsa.cc
   ErasureCodeIsaTableCache.cc
   ErasureCodePluginIsa.cc
   xor_op.cc
  }
  jerasure=jerasure {
   ErasureCodeJerasure.h
   ErasureCodePluginJerasure.h
   jerasure_init.h
   ErasureCodeJerasure.cc
   ErasureCodePluginJerasure.cc
   jerasure_init.cc
   gf-complete=gf-complete {
   }
   jerasure=jerasure {
   }
  }
  lrc=lrc {
   ErasureCodeLrc.h
   ErasureCodePluginLrc.h
   ErasureCodeLrc.cc
   ErasureCodePluginLrc.cc
  }
  shec=shec {
   ErasureCodePluginShec.h
   ErasureCodeShec.h
   ErasureCodeShecTableCache.h
   determinant.c
   ErasureCodePluginShec.cc
   ErasureCodeShec.cc
   ErasureCodeShecTableCache.cc
  }
 }
 global=global {
  global_context.h
  global_init.h
  pidfile.h
  signal_handler.h
  global_context.cc
  global_init.cc
  pidfile.cc
  signal_handler.cc
 }
 googletest=googletest {
 }
 include=include {
  CompatSet.h
  Context.h
  Distribution.h
  addr_parsing.h
  alloc_ptr.h
  any.h
  assert.h
  bitmapper.h
  blobhash.h
  btree_map.h
  buffer.h
  buffer_fwd.h
  byteorder.h
  ceph_features.h
  ceph_frag.h
  ceph_fs.h
  ceph_hash.h
  cmp.h
  color.h
  compact_map.h
  compact_set.h
  compat.h
  coredumpctl.h
  counter.h
  crc32c.h
  demangle.h
  denc.h
  elist.h
  encoding.h
  err.h
  error.h
  event_type.h
  filepath.h
  frag.h
  fs_types.h
  hash.h
  health.h
  inline_memory.h
  int_types.h
  intarith.h
  interval_set.h
  ipaddr.h
  krbd.h
  linux_fiemap.h
  lru.h
  memory.h
  mempool.h
  msgr.h
  object.h
  on_exit.h
  page.h
  rados.h
  random.h
  rangeset.h
  rbd_types.h
  scope_guard.h
  sock_compat.h
  spinlock.h
  stat.h
  statlite.h
  str_list.h
  str_map.h
  stringify.h
  timegm.h
  types.h
  unordered_map.h
  unordered_set.h
  util.h
  utime.h
  uuid.h
  xlist.h
  cephfs=cephfs {
   ceph_statx.h
   libcephfs.h
  }
  cpp-btree=cpp-btree {
   btree.h
   btree_container.h
   btree_map.h
   btree_set.h
  }
  rados=rados {
   buffer.h
   buffer_fwd.h
   crc32c.h
   inline_memory.h
   librados.h
   librgw.h
   memory.h
   objclass.h
   page.h
   rados_types.h
   rgw_file.h
   librados.hpp
   rados_types.hpp
  }
  radosstriper=radosstriper {
   libradosstriper.h
   libradosstriper.hpp
  }
  rbd=rbd {
   features.h
   librbd.h
   object_map_types.h
   librbd.hpp
  }
 }
 isa-l=isa-l {
 }
 java=java {
  java=java {
   com=com {
    ceph=ceph {
     crush=crush {
     }
     fs=fs {
     }
    }
   }
  }
  native=native {
   JniConstants.h
   ScopedLocalRef.h
   libcephfs_jni.cc
   JniConstants.cpp
  }
  test=test {
   com=com {
    ceph=ceph {
     fs=fs {
     }
    }
   }
  }
 }
 journal=journal {
  Entry.h
  Future.h
  FutureImpl.h
  JournalMetadata.h
  JournalMetadataListener.h
  JournalPlayer.h
  JournalRecorder.h
  JournalTrimmer.h
  Journaler.h
  ObjectPlayer.h
  ObjectRecorder.h
  ReplayEntry.h
  ReplayHandler.h
  Settings.h
  Utils.h
  Entry.cc
  Future.cc
  FutureImpl.cc
  JournalMetadata.cc
  JournalPlayer.cc
  JournalRecorder.cc
  JournalTrimmer.cc
  Journaler.cc
  ObjectPlayer.cc
  ObjectRecorder.cc
  Utils.cc
 }
 json_spirit=json_spirit {
  json_spirit.h
  json_spirit_error_position.h
  json_spirit_reader.h
  json_spirit_reader_template.h
  json_spirit_stream_reader.h
  json_spirit_utils.h
  json_spirit_value.h
  json_spirit_writer.h
  json_spirit_writer_options.h
  json_spirit_writer_template.h
  json_spirit_reader.cpp
  json_spirit_value.cpp
  json_spirit_writer.cpp
 }
 key_value_store=key_value_store {
  key_value_structure.h
  kv_flat_btree_async.h
  kvs_arg_types.h
  cls_kvs.cc
  kv_flat_btree_async.cc
 }
 kv=kv {
  KeyValueDB.h
  KineticStore.h
  LevelDBStore.h
  MemDB.h
  RocksDBStore.h
  KeyValueDB.cc
  KineticStore.cc
  LevelDBStore.cc
  MemDB.cc
  RocksDBStore.cc
  rocksdb_cache=rocksdb_cache {
   BinnedLRUCache.h
   ShardedCache.h
   BinnedLRUCache.cc
   ShardedCache.cc
  }
 }
 librados=librados {
  AioCompletionImpl.h
  IoCtxImpl.h
  ListObjectImpl.h
  PoolAsyncCompletionImpl.h
  RadosClient.h
  RadosXattrIter.h
  librados_asio.h
  snap_set_diff.h
  IoCtxImpl.cc
  RadosClient.cc
  RadosXattrIter.cc
  librados.cc
  snap_set_diff.cc
 }
 libradosstriper=libradosstriper {
  MultiAioCompletionImpl.h
  RadosStriperImpl.h
  MultiAioCompletionImpl.cc
  RadosStriperImpl.cc
  libradosstriper.cc
 }
 librbd=librbd {
  AsyncObjectThrottle.h
  AsyncRequest.h
  BlockGuard.h
  DeepCopyRequest.h
  ExclusiveLock.h
  Features.h
  ImageCtx.h
  ImageState.h
  ImageWatcher.h
  Journal.h
  LibrbdAdminSocketHook.h
  LibrbdWriteback.h
  ManagedLock.h
  MirroringWatcher.h
  ObjectMap.h
  Operations.h
  TaskFinisher.h
  TrashWatcher.h
  Types.h
  Utils.h
  WatchNotifyTypes.h
  Watcher.h
  internal.h
  AsyncObjectThrottle.cc
  AsyncRequest.cc
  DeepCopyRequest.cc
  ExclusiveLock.cc
  Features.cc
  ImageCtx.cc
  ImageState.cc
  ImageWatcher.cc
  Journal.cc
  LibrbdAdminSocketHook.cc
  LibrbdWriteback.cc
  ManagedLock.cc
  MirroringWatcher.cc
  ObjectMap.cc
  Operations.cc
  TrashWatcher.cc
  Utils.cc
  WatchNotifyTypes.cc
  Watcher.cc
  internal.cc
  librbd.cc
  api=api {
   DiffIterate.h
   Group.h
   Image.h
   Mirror.h
   Snapshot.h
   DiffIterate.cc
   Group.cc
   Image.cc
   Mirror.cc
   Snapshot.cc
  }
  cache=cache {
   ImageCache.h
   ImageWriteback.h
   ObjectCacherObjectDispatch.h
   PassthroughImageCache.h
   ImageWriteback.cc
   ObjectCacherObjectDispatch.cc
   PassthroughImageCache.cc
  }
  deep_copy=deep_copy {
   ImageCopyRequest.h
   MetadataCopyRequest.h
   ObjectCopyRequest.h
   SetHeadRequest.h
   SnapshotCopyRequest.h
   SnapshotCreateRequest.h
   Types.h
   Utils.h
   ImageCopyRequest.cc
   MetadataCopyRequest.cc
   ObjectCopyRequest.cc
   SetHeadRequest.cc
   SnapshotCopyRequest.cc
   SnapshotCreateRequest.cc
   Utils.cc
  }
  exclusive_lock=exclusive_lock {
   AutomaticPolicy.h
   Policy.h
   PostAcquireRequest.h
   PreAcquireRequest.h
   PreReleaseRequest.h
   StandardPolicy.h
   AutomaticPolicy.cc
   PostAcquireRequest.cc
   PreAcquireRequest.cc
   PreReleaseRequest.cc
   StandardPolicy.cc
  }
  image=image {
   CloneRequest.h
   CloseRequest.h
   CreateRequest.h
   DetachChildRequest.h
   OpenRequest.h
   RefreshParentRequest.h
   RefreshRequest.h
   RemoveRequest.h
   SetFlagsRequest.h
   SetSnapRequest.h
   TypeTraits.h
   ValidatePoolRequest.h
   CloneRequest.cc
   CloseRequest.cc
   CreateRequest.cc
   DetachChildRequest.cc
   OpenRequest.cc
   RefreshParentRequest.cc
   RefreshRequest.cc
   RemoveRequest.cc
   SetFlagsRequest.cc
   SetSnapRequest.cc
   ValidatePoolRequest.cc
  }
  image_watcher=image_watcher {
   NotifyLockOwner.h
   NotifyLockOwner.cc
  }
  io=io {
   AioCompletion.h
   AsyncOperation.h
   CopyupRequest.h
   ImageDispatchSpec.h
   ImageRequest.h
   ImageRequestWQ.h
   ObjectDispatch.h
   ObjectDispatchInterface.h
   ObjectDispatchSpec.h
   ObjectDispatcher.h
   ObjectRequest.h
   ReadResult.h
   Types.h
   Utils.h
   AioCompletion.cc
   AsyncOperation.cc
   CopyupRequest.cc
   ImageDispatchSpec.cc
   ImageRequest.cc
   ImageRequestWQ.cc
   ObjectDispatch.cc
   ObjectDispatchSpec.cc
   ObjectDispatcher.cc
   ObjectRequest.cc
   ReadResult.cc
   Utils.cc
  }
  journal=journal {
   CreateRequest.h
   DemoteRequest.h
   DisabledPolicy.h
   ObjectDispatch.h
   OpenRequest.h
   Policy.h
   PromoteRequest.h
   RemoveRequest.h
   Replay.h
   ResetRequest.h
   StandardPolicy.h
   TypeTraits.h
   Types.h
   Utils.h
   CreateRequest.cc
   DemoteRequest.cc
   ObjectDispatch.cc
   OpenRequest.cc
   PromoteRequest.cc
   RemoveRequest.cc
   Replay.cc
   ResetRequest.cc
   StandardPolicy.cc
   Types.cc
   Utils.cc
  }
  managed_lock=managed_lock {
   AcquireRequest.h
   BreakRequest.h
   GetLockerRequest.h
   ReacquireRequest.h
   ReleaseRequest.h
   Types.h
   Utils.h
   AcquireRequest.cc
   BreakRequest.cc
   GetLockerRequest.cc
   ReacquireRequest.cc
   ReleaseRequest.cc
   Utils.cc
  }
  mirror=mirror {
   DemoteRequest.h
   DisableRequest.h
   EnableRequest.h
   GetInfoRequest.h
   GetStatusRequest.h
   PromoteRequest.h
   Types.h
   DemoteRequest.cc
   DisableRequest.cc
   EnableRequest.cc
   GetInfoRequest.cc
   GetStatusRequest.cc
   PromoteRequest.cc
  }
  mirroring_watcher=mirroring_watcher {
   Types.h
   Types.cc
  }
  object_map=object_map {
   CreateRequest.h
   InvalidateRequest.h
   LockRequest.h
   RefreshRequest.h
   RemoveRequest.h
   Request.h
   ResizeRequest.h
   SnapshotCreateRequest.h
   SnapshotRemoveRequest.h
   SnapshotRollbackRequest.h
   UnlockRequest.h
   UpdateRequest.h
   CreateRequest.cc
   InvalidateRequest.cc
   LockRequest.cc
   RefreshRequest.cc
   RemoveRequest.cc
   Request.cc
   ResizeRequest.cc
   SnapshotCreateRequest.cc
   SnapshotRemoveRequest.cc
   SnapshotRollbackRequest.cc
   UnlockRequest.cc
   UpdateRequest.cc
  }
  operation=operation {
   DisableFeaturesRequest.h
   EnableFeaturesRequest.h
   FlattenRequest.h
   MetadataRemoveRequest.h
   MetadataSetRequest.h
   ObjectMapIterate.h
   RebuildObjectMapRequest.h
   RenameRequest.h
   Request.h
   ResizeRequest.h
   SnapshotCreateRequest.h
   SnapshotLimitRequest.h
   SnapshotProtectRequest.h
   SnapshotRemoveRequest.h
   SnapshotRenameRequest.h
   SnapshotRollbackRequest.h
   SnapshotUnprotectRequest.h
   TrimRequest.h
   DisableFeaturesRequest.cc
   EnableFeaturesRequest.cc
   FlattenRequest.cc
   MetadataRemoveRequest.cc
   MetadataSetRequest.cc
   ObjectMapIterate.cc
   RebuildObjectMapRequest.cc
   RenameRequest.cc
   Request.cc
   ResizeRequest.cc
   SnapshotCreateRequest.cc
   SnapshotLimitRequest.cc
   SnapshotProtectRequest.cc
   SnapshotRemoveRequest.cc
   SnapshotRenameRequest.cc
   SnapshotRollbackRequest.cc
   SnapshotUnprotectRequest.cc
   TrimRequest.cc
  }
  trash=trash {
   MoveRequest.h
   RemoveRequest.h
   MoveRequest.cc
   RemoveRequest.cc
  }
  trash_watcher=trash_watcher {
   Types.h
   Types.cc
  }
  watcher=watcher {
   Notifier.h
   RewatchRequest.h
   Types.h
   Utils.h
   Notifier.cc
   RewatchRequest.cc
   Types.cc
  }
 }
 log=log {
  Entry.h
  EntryQueue.h
  Log.h
  LogClock.h
  SubsystemMap.h
  Log.cc
  test.cc
 }
 lua=lua {
 }
 mds=mds {
  Anchor.h
  Beacon.h
  CDentry.h
  CDir.h
  CInode.h
  Capability.h
  DamageTable.h
  FSMap.h
  FSMapUser.h
  InoTable.h
  JournalPointer.h
  LocalLock.h
  Locker.h
  LogEvent.h
  LogSegment.h
  MDBalancer.h
  MDCache.h
  MDLog.h
  MDSAuthCaps.h
  MDSCacheObject.h
  MDSContext.h
  MDSContinuation.h
  MDSDaemon.h
  MDSMap.h
  MDSRank.h
  MDSTable.h
  MDSTableClient.h
  MDSTableServer.h
  Mantle.h
  Migrator.h
  Mutation.h
  OpenFileTable.h
  PurgeQueue.h
  RecoveryQueue.h
  ScatterLock.h
  ScrubHeader.h
  ScrubStack.h
  Server.h
  SessionMap.h
  SimpleLock.h
  SnapClient.h
  SnapRealm.h
  SnapServer.h
  StrayManager.h
  cephfs_features.h
  flock.h
  inode_backtrace.h
  locks.h
  mds_table_types.h
  mdstypes.h
  snap.h
  locks.c
  Anchor.cc
  Beacon.cc
  CDentry.cc
  CDir.cc
  CInode.cc
  Capability.cc
  DamageTable.cc
  FSMap.cc
  FSMapUser.cc
  InoTable.cc
  JournalPointer.cc
  Locker.cc
  LogEvent.cc
  MDBalancer.cc
  MDCache.cc
  MDLog.cc
  MDSAuthCaps.cc
  MDSCacheObject.cc
  MDSContext.cc
  MDSDaemon.cc
  MDSMap.cc
  MDSRank.cc
  MDSTable.cc
  MDSTableClient.cc
  MDSTableServer.cc
  Mantle.cc
  Migrator.cc
  Mutation.cc
  OpenFileTable.cc
  PurgeQueue.cc
  RecoveryQueue.cc
  ScrubStack.cc
  Server.cc
  SessionMap.cc
  SimpleLock.cc
  SnapClient.cc
  SnapRealm.cc
  SnapServer.cc
  StrayManager.cc
  flock.cc
  inode_backtrace.cc
  journal.cc
  mdstypes.cc
  snap.cc
  balancers=balancers {
   greedyspill.lua
  }
  events=events {
   ECommitted.h
   EExport.h
   EFragment.h
   EImportFinish.h
   EImportStart.h
   EMetaBlob.h
   ENoOp.h
   EOpen.h
   EResetJournal.h
   ESession.h
   ESessions.h
   ESlaveUpdate.h
   ESubtreeMap.h
   ETableClient.h
   ETableServer.h
   EUpdate.h
  }
 }
 messages=messages {
  MAuth.h
  MAuthReply.h
  MBackfillReserve.h
  MCacheExpire.h
  MClientCapRelease.h
  MClientCaps.h
  MClientLease.h
  MClientQuota.h
  MClientReconnect.h
  MClientReply.h
  MClientRequest.h
  MClientRequestForward.h
  MClientSession.h
  MClientSnap.h
  MCommand.h
  MCommandReply.h
  MConfig.h
  MDataPing.h
  MDentryLink.h
  MDentryUnlink.h
  MDirUpdate.h
  MDiscover.h
  MDiscoverReply.h
  MExportCaps.h
  MExportCapsAck.h
  MExportDir.h
  MExportDirAck.h
  MExportDirCancel.h
  MExportDirDiscover.h
  MExportDirDiscoverAck.h
  MExportDirFinish.h
  MExportDirNotify.h
  MExportDirNotifyAck.h
  MExportDirPrep.h
  MExportDirPrepAck.h
  MFSMap.h
  MFSMapUser.h
  MForward.h
  MGatherCaps.h
  MGenericMessage.h
  MGetConfig.h
  MGetPoolStats.h
  MGetPoolStatsReply.h
  MHeartbeat.h
  MInodeFileCaps.h
  MLock.h
  MLog.h
  MLogAck.h
  MMDSBeacon.h
  MMDSCacheRejoin.h
  MMDSFindIno.h
  MMDSFindInoReply.h
  MMDSFragmentNotify.h
  MMDSFragmentNotifyAck.h
  MMDSLoadTargets.h
  MMDSMap.h
  MMDSOpenIno.h
  MMDSOpenInoReply.h
  MMDSResolve.h
  MMDSResolveAck.h
  MMDSSlaveRequest.h
  MMDSSnapUpdate.h
  MMDSTableRequest.h
  MMgrBeacon.h
  MMgrClose.h
  MMgrConfigure.h
  MMgrDigest.h
  MMgrMap.h
  MMgrOpen.h
  MMgrReport.h
  MMonCommand.h
  MMonCommandAck.h
  MMonElection.h
  MMonGetMap.h
  MMonGetOSDMap.h
  MMonGetVersion.h
  MMonGetVersionReply.h
  MMonGlobalID.h
  MMonHealth.h
  MMonHealthChecks.h
  MMonJoin.h
  MMonMap.h
  MMonMetadata.h
  MMonMgrReport.h
  MMonPaxos.h
  MMonProbe.h
  MMonQuorumService.h
  MMonScrub.h
  MMonSubscribe.h
  MMonSubscribeAck.h
  MMonSync.h
  MNop.h
  MOSDAlive.h
  MOSDBackoff.h
  MOSDBeacon.h
  MOSDBoot.h
  MOSDECSubOpRead.h
  MOSDECSubOpReadReply.h
  MOSDECSubOpWrite.h
  MOSDECSubOpWriteReply.h
  MOSDFailure.h
  MOSDFastDispatchOp.h
  MOSDForceRecovery.h
  MOSDFull.h
  MOSDMap.h
  MOSDMarkMeDown.h
  MOSDOp.h
  MOSDOpReply.h
  MOSDPGBackfill.h
  MOSDPGBackfillRemove.h
  MOSDPGCreate.h
  MOSDPGCreate2.h
  MOSDPGCreated.h
  MOSDPGInfo.h
  MOSDPGLog.h
  MOSDPGNotify.h
  MOSDPGPull.h
  MOSDPGPush.h
  MOSDPGPushReply.h
  MOSDPGQuery.h
  MOSDPGRecoveryDelete.h
  MOSDPGRecoveryDeleteReply.h
  MOSDPGRemove.h
  MOSDPGScan.h
  MOSDPGTemp.h
  MOSDPGTrim.h
  MOSDPGUpdateLogMissing.h
  MOSDPGUpdateLogMissingReply.h
  MOSDPeeringOp.h
  MOSDPing.h
  MOSDRepOp.h
  MOSDRepOpReply.h
  MOSDRepScrub.h
  MOSDRepScrubMap.h
  MOSDScrub.h
  MOSDScrub2.h
  MOSDScrubReserve.h
  MPGStats.h
  MPGStatsAck.h
  MPing.h
  MPoolOp.h
  MPoolOpReply.h
  MRecoveryReserve.h
  MRemoveSnaps.h
  MRoute.h
  MServiceMap.h
  MStatfs.h
  MStatfsReply.h
  MTimeCheck.h
  MWatchNotify.h
  PaxosServiceMessage.h
 }
 mgr=mgr {
  ActivePyModule.h
  ActivePyModules.h
  BaseMgrModule.h
  BaseMgrStandbyModule.h
  ClusterState.h
  DaemonHealthMetric.h
  DaemonHealthMetricCollector.h
  DaemonServer.h
  DaemonState.h
  Gil.h
  Mgr.h
  MgrClient.h
  MgrCommands.h
  MgrContext.h
  MgrSession.h
  MgrStandby.h
  PyFormatter.h
  PyModule.h
  PyModuleRegistry.h
  PyModuleRunner.h
  PyOSDMap.h
  PythonCompat.h
  ServiceMap.h
  StandbyPyModules.h
  mgr_commands.h
  ActivePyModule.cc
  ActivePyModules.cc
  BaseMgrModule.cc
  BaseMgrStandbyModule.cc
  ClusterState.cc
  DaemonHealthMetricCollector.cc
  DaemonServer.cc
  DaemonState.cc
  Gil.cc
  Mgr.cc
  MgrClient.cc
  MgrStandby.cc
  PyFormatter.cc
  PyModule.cc
  PyModuleRegistry.cc
  PyModuleRunner.cc
  PyOSDMap.cc
  ServiceMap.cc
  StandbyPyModules.cc
  mgr_commands.cc
 }
 mon=mon {
  AuthMonitor.h
  ConfigKeyService.h
  ConfigMap.h
  ConfigMonitor.h
  CreatingPGs.h
  Elector.h
  FSCommands.h
  HealthMonitor.h
  LogMonitor.h
  MDSMonitor.h
  MgrMap.h
  MgrMonitor.h
  MgrStatMonitor.h
  MonCap.h
  MonClient.h
  MonCommand.h
  MonCommands.h
  MonMap.h
  MonOpRequest.h
  Monitor.h
  MonitorDBStore.h
  MonmapMonitor.h
  OSDMonitor.h
  PGMap.h
  Paxos.h
  PaxosFSMap.h
  PaxosService.h
  QuorumService.h
  Session.h
  health_check.h
  mon_types.h
  AuthMonitor.cc
  ConfigKeyService.cc
  ConfigMap.cc
  ConfigMonitor.cc
  Elector.cc
  FSCommands.cc
  HealthMonitor.cc
  LogMonitor.cc
  MDSMonitor.cc
  MgrMonitor.cc
  MgrStatMonitor.cc
  MonCap.cc
  MonClient.cc
  MonMap.cc
  Monitor.cc
  MonmapMonitor.cc
  OSDMonitor.cc
  PGMap.cc
  Paxos.cc
  PaxosService.cc
 }
 mount=mount {
  canonicalize.c
  mount.ceph.c
  mtab.c
 }
 msg=msg {
  Connection.h
  DispatchQueue.h
  DispatchStrategy.h
  Dispatcher.h
  FastStrategy.h
  Message.h
  Messenger.h
  QueueStrategy.h
  SimplePolicyMessenger.h
  msg_types.h
  DispatchQueue.cc
  Message.cc
  Messenger.cc
  QueueStrategy.cc
  msg_types.cc
  async=async {
   AsyncConnection.h
   AsyncMessenger.h
   Event.h
   EventEpoll.h
   EventKqueue.h
   EventSelect.h
   PosixStack.h
   Stack.h
   net_handler.h
   AsyncConnection.cc
   AsyncMessenger.cc
   Event.cc
   EventEpoll.cc
   EventKqueue.cc
   EventSelect.cc
   PosixStack.cc
   Stack.cc
   net_handler.cc
   dpdk=dpdk {
    ARP.h
    DPDK.h
    DPDKStack.h
    EventDPDK.h
    IP.h
    IPChecksum.h
    Packet.h
    PacketUtil.h
    TCP-Stack.h
    TCP.h
    UserspaceEvent.h
    align.h
    array_map.h
    byteorder.h
    capture.h
    circular_buffer.h
    const.h
    dpdk_rte.h
    ethernet.h
    ip_types.h
    net.h
    queue.h
    shared_ptr.h
    stream.h
    toeplitz.h
    transfer.h
    ARP.cc
    DPDK.cc
    DPDKStack.cc
    EventDPDK.cc
    IP.cc
    IPChecksum.cc
    Packet.cc
    TCP.cc
    UserspaceEvent.cc
    dpdk_rte.cc
    ethernet.cc
    net.cc
   }
   rdma=rdma {
    Infiniband.h
    RDMAStack.h
    Infiniband.cc
    RDMAConnectedSocketImpl.cc
    RDMAServerSocketImpl.cc
    RDMAStack.cc
   }
  }
  simple=simple {
   Accepter.h
   Pipe.h
   PipeConnection.h
   SimpleMessenger.h
   Accepter.cc
   Pipe.cc
   PipeConnection.cc
   SimpleMessenger.cc
  }
  xio=xio {
   XioConnection.h
   XioInSeq.h
   XioMessenger.h
   XioMsg.h
   XioPool.h
   XioPortal.h
   XioSubmit.h
   XioConnection.cc
   XioMessenger.cc
   XioMsg.cc
   XioPool.cc
   XioPortal.cc
  }
 }
 objclass=objclass {
  objclass.h
  class_api.cc
 }
 objsync=objsync {
  boto_del.py
 }
 ocf=ocf {
  rbd.in
 }
 os=os {
  FuseStore.h
  ObjectMap.h
  ObjectStore.h
  kv.h
  FuseStore.cc
  ObjectStore.cc
  Transaction.cc
  bluestore=bluestore {
   Allocator.h
   BitmapAllocator.h
   BitmapFreelistManager.h
   BlockDevice.h
   BlueFS.h
   BlueRocksEnv.h
   BlueStore.h
   FreelistManager.h
   KernelDevice.h
   NVMEDevice.h
   PMEMDevice.h
   StupidAllocator.h
   aio.h
   bluefs_types.h
   bluestore_types.h
   fastbmap_allocator_impl.h
   Allocator.cc
   BitmapAllocator.cc
   BitmapFreelistManager.cc
   BlockDevice.cc
   BlueFS.cc
   BlueRocksEnv.cc
   BlueStore.cc
   FreelistManager.cc
   KernelDevice.cc
   NVMEDevice.cc
   PMEMDevice.cc
   StupidAllocator.cc
   aio.cc
   bluefs_types.cc
   bluestore_tool.cc
   bluestore_types.cc
   fastbmap_allocator_impl.cc
  }
  filestore=filestore {
   BtrfsFileStoreBackend.h
   CollectionIndex.h
   DBObjectMap.h
   FDCache.h
   FileJournal.h
   FileStore.h
   GenericFileStoreBackend.h
   HashIndex.h
   IndexManager.h
   Journal.h
   JournalThrottle.h
   JournalingObjectStore.h
   LFNIndex.h
   SequencerPosition.h
   WBThrottle.h
   XfsFileStoreBackend.h
   ZFSFileStoreBackend.h
   chain_xattr.h
   BtrfsFileStoreBackend.cc
   DBObjectMap.cc
   FileJournal.cc
   FileStore.cc
   GenericFileStoreBackend.cc
   HashIndex.cc
   IndexManager.cc
   JournalThrottle.cc
   JournalingObjectStore.cc
   LFNIndex.cc
   WBThrottle.cc
   XfsFileStoreBackend.cc
   ZFSFileStoreBackend.cc
   chain_xattr.cc
  }
  fs=fs {
   FS.h
   XFS.h
   ZFS.h
   btrfs_ioctl.h
   FS.cc
   XFS.cc
   ZFS.cc
  }
  kstore=kstore {
   KStore.h
   kstore_types.h
   KStore.cc
   kstore_types.cc
  }
  memstore=memstore {
   MemStore.h
   PageSet.h
   MemStore.cc
  }
 }
 osd=osd {
  ClassHandler.h
  ECBackend.h
  ECMsgTypes.h
  ECTransaction.h
  ECUtil.h
  ExtentCache.h
  HitSet.h
  OSD.h
  OSDCap.h
  OSDMap.h
  OSDMapMapping.h
  ObjectVersioner.h
  OpQueueItem.h
  OpRequest.h
  PG.h
  PGBackend.h
  PGLog.h
  PGPeeringEvent.h
  PGTransaction.h
  PrimaryLogPG.h
  ReplicatedBackend.h
  ScrubStore.h
  Session.h
  SnapMapper.h
  TierAgentState.h
  Watch.h
  mClockClientQueue.h
  mClockOpClassQueue.h
  mClockOpClassSupport.h
  osd_internal_types.h
  osd_types.h
  ClassHandler.cc
  ECBackend.cc
  ECMsgTypes.cc
  ECTransaction.cc
  ECUtil.cc
  ExtentCache.cc
  HitSet.cc
  OSD.cc
  OSDCap.cc
  OSDMap.cc
  OSDMapMapping.cc
  OpQueueItem.cc
  OpRequest.cc
  PG.cc
  PGBackend.cc
  PGLog.cc
  PGPeeringEvent.cc
  PrimaryLogPG.cc
  ReplicatedBackend.cc
  ScrubStore.cc
  Session.cc
  SnapMapper.cc
  Watch.cc
  mClockClientQueue.cc
  mClockOpClassQueue.cc
  mClockOpClassSupport.cc
  osd_types.cc
 }
 osdc=osdc {
  Filer.h
  Journaler.h
  ObjectCacher.h
  Objecter.h
  Striper.h
  WritebackHandler.h
  Filer.cc
  Journaler.cc
  ObjectCacher.cc
  Objecter.cc
  Striper.cc
 }
 perfglue=perfglue {
  cpu_profiler.h
  heap_profiler.h
  cpu_profiler.cc
  disabled_heap_profiler.cc
  disabled_stubs.cc
  heap_profiler.cc
 }
 powerdns=powerdns {
  README.md
  rgw-pdns.conf.in
  pdns-backend-rgw.py
 }
 pybind=pybind {
  ceph_argparse.py
  ceph_daemon.py
  ceph_volume_client.py
  cephfs=cephfs {
   MANIFEST.in
   setup.py
  }
  mgr=mgr {
   mgr_module.py
   balancer=balancer {
    __init__.py
    module.py
   }
   crash=crash {
    __init__.py
    module.py
   }
   dashboard=dashboard {
    run-backend-api-request.sh
    run-backend-api-tests.sh
    run-frontend-e2e-tests.sh
    run-frontend-unittests.sh
    run-tox.sh
    __init__.py
    awsauth.py
    exceptions.py
    module.py
    rest_client.py
    settings.py
    tools.py
    controllers=controllers {
     __init__.py
     auth.py
     cephfs.py
     cluster_configuration.py
     dashboard.py
     erasure_code_profile.py
     host.py
     monitor.py
     osd.py
     perf_counters.py
     pool.py
     rbd.py
     rbd_mirroring.py
     rgw.py
     summary.py
     task.py
     tcmu_iscsi.py
    }
    frontend=frontend {
     e2e=e2e {
      cluster=cluster {
      }
     }
     src=src {
      app=app {
       ceph=ceph {
        block=block {
         flatten-confirmation-modal=flatten-confirmation-modal {
         }
         iscsi=iscsi {
         }
         mirroring=mirroring {
         }
         rbd-details=rbd-details {
         }
         rbd-form=rbd-form {
         }
         rbd-list=rbd-list {
         }
         rbd-snapshot-form=rbd-snapshot-form {
         }
         rbd-snapshot-list=rbd-snapshot-list {
         }
         rollback-confirmation-modal=rollback-confirmation-modal {
         }
        }
        cephfs=cephfs {
         cephfs=cephfs {
         }
         cephfs-chart=cephfs-chart {
         }
         clients=clients {
         }
        }
        cluster=cluster {
         configuration=configuration {
         }
         hosts=hosts {
         }
         monitor=monitor {
         }
         osd=osd {
          osd-details=osd-details {
          }
          osd-list=osd-list {
          }
          osd-performance-histogram=osd-performance-histogram {
          }
         }
        }
        dashboard=dashboard {
         dashboard=dashboard {
         }
         health=health {
         }
         health-pie=health-pie {
         }
        }
        performance-counter=performance-counter {
         performance-counter=performance-counter {
         }
         table-performance-counter=table-performance-counter {
         }
        }
        pool=pool {
         pool-list=pool-list {
         }
        }
        rgw=rgw {
         models=models {
         }
         rgw-501=rgw-501 {
         }
         rgw-bucket-details=rgw-bucket-details {
         }
         rgw-bucket-form=rgw-bucket-form {
         }
         rgw-bucket-list=rgw-bucket-list {
         }
         rgw-daemon-details=rgw-daemon-details {
         }
         rgw-daemon-list=rgw-daemon-list {
         }
         rgw-user-capability-modal=rgw-user-capability-modal {
         }
         rgw-user-details=rgw-user-details {
         }
         rgw-user-form=rgw-user-form {
         }
         rgw-user-list=rgw-user-list {
         }
         rgw-user-s3-key-modal=rgw-user-s3-key-modal {
         }
         rgw-user-subuser-modal=rgw-user-subuser-modal {
         }
         rgw-user-swift-key-modal=rgw-user-swift-key-modal {
         }
        }
       }
       core=core {
        auth=auth {
         login=login {
         }
         logout=logout {
         }
        }
        navigation=navigation {
         navigation=navigation {
         }
         notifications=notifications {
         }
         task-manager=task-manager {
         }
        }
        not-found=not-found {
        }
       }
       shared=shared {
        api=api {
        }
        components=components {
         deletion-modal=deletion-modal {
         }
         error-panel=error-panel {
         }
         helper=helper {
         }
         info-panel=info-panel {
         }
         loading-panel=loading-panel {
         }
         modal=modal {
         }
         sparkline=sparkline {
         }
         submit-button=submit-button {
         }
         usage-bar=usage-bar {
         }
         view-cache=view-cache {
         }
        }
        datatable=datatable {
         table=table {
         }
         table-key-value=table-key-value {
         }
        }
        decorators=decorators {
        }
        directives=directives {
        }
        enum=enum {
        }
        models=models {
        }
        pipes=pipes {
        }
        services=services {
        }
        validators=validators {
        }
       }
      }
      assets=assets {
      }
      environments=environments {
      }
      styles=styles {
      }
     }
    }
    services=services {
     __init__.py
     ceph_service.py
     rgw_client.py
    }
    tests=tests {
     __init__.py
     helper.py
     test_notification.py
     test_rbd_mirroring.py
     test_rest_client.py
     test_rest_tasks.py
     test_rgw_client.py
     test_settings.py
     test_task.py
     test_tcmu_iscsi.py
     test_tools.py
    }
   }
   hello=hello {
    __init__.py
    module.py
   }
   influx=influx {
    __init__.py
    module.py
   }
   iostat=iostat {
    __init__.py
    module.py
   }
   localpool=localpool {
    __init__.py
    module.py
   }
   prometheus=prometheus {
    __init__.py
    module.py
   }
   restful=restful {
    __init__.py
    common.py
    context.py
    decorators.py
    hooks.py
    module.py
    api=api {
     __init__.py
     config.py
     crush.py
     doc.py
     mon.py
     osd.py
     pool.py
     request.py
     server.py
    }
   }
   selftest=selftest {
    __init__.py
    module.py
   }
   smart=smart {
    __init__.py
    module.py
   }
   status=status {
    __init__.py
    module.py
   }
   telegraf=telegraf {
    __init__.py
    basesocket.py
    module.py
    protocol.py
    utils.py
   }
   telemetry=telemetry {
    __init__.py
    module.py
   }
   zabbix=zabbix {
    __init__.py
    module.py
   }
  }
  rados=rados {
   MANIFEST.in
   setup.py
  }
  rbd=rbd {
   MANIFEST.in
   setup.py
  }
  rgw=rgw {
   MANIFEST.in
   setup.py
  }
 }
 rapidjson=rapidjson {
 }
 rbd_fuse=rbd_fuse {
  rbd-fuse.cc
 }
 rbd_replay=rbd_replay {
  ActionTypes.h
  BufferReader.h
  BoundedBuffer.hpp
  ImageNameMap.hpp
  PendingIO.hpp
  Replayer.hpp
  actions.hpp
  ios.hpp
  rbd_loc.hpp
  rbd_replay_debug.hpp
  ActionTypes.cc
  BufferReader.cc
  ImageNameMap.cc
  PendingIO.cc
  Replayer.cc
  actions.cc
  ios.cc
  rbd-replay-prep.cc
  rbd-replay.cc
  rbd_loc.cc
 }
 rgw=rgw {
  rgw_acl.h
  rgw_acl_s3.h
  rgw_acl_swift.h
  rgw_asio_client.h
  rgw_asio_frontend.h
  rgw_auth.h
  rgw_auth_filters.h
  rgw_auth_keystone.h
  rgw_auth_registry.h
  rgw_auth_s3.h
  rgw_b64.h
  rgw_basic_types.h
  rgw_bucket.h
  rgw_cache.h
  rgw_civetweb.h
  rgw_civetweb_log.h
  rgw_client_io.h
  rgw_client_io_filters.h
  rgw_common.h
  rgw_compression.h
  rgw_coroutine.h
  rgw_cors.h
  rgw_cors_s3.h
  rgw_cors_swift.h
  rgw_cr_rados.h
  rgw_cr_rest.h
  rgw_crypt.h
  rgw_crypt_sanitize.h
  rgw_data_sync.h
  rgw_es_query.h
  rgw_fcgi.h
  rgw_file.h
  rgw_formats.h
  rgw_frontend.h
  rgw_gc.h
  rgw_http_client.h
  rgw_http_client_curl.h
  rgw_http_errors.h
  rgw_iam_policy.h
  rgw_iam_policy_keywords.h
  rgw_keystone.h
  rgw_lc.h
  rgw_lc_s3.h
  rgw_ldap.h
  rgw_lib.h
  rgw_lib_frontend.h
  rgw_loadgen.h
  rgw_log.h
  rgw_meta_sync_status.h
  rgw_metadata.h
  rgw_multi.h
  rgw_multi_del.h
  rgw_object_expirer_core.h
  rgw_op.h
  rgw_orphan.h
  rgw_os_lib.h
  rgw_otp.h
  rgw_period_history.h
  rgw_period_puller.h
  rgw_period_pusher.h
  rgw_policy_s3.h
  rgw_process.h
  rgw_quota.h
  rgw_rados.h
  rgw_realm_reloader.h
  rgw_realm_watcher.h
  rgw_replica_log.h
  rgw_request.h
  rgw_reshard.h
  rgw_resolve.h
  rgw_rest.h
  rgw_rest_admin.h
  rgw_rest_bucket.h
  rgw_rest_client.h
  rgw_rest_config.h
  rgw_rest_conn.h
  rgw_rest_log.h
  rgw_rest_metadata.h
  rgw_rest_opstate.h
  rgw_rest_realm.h
  rgw_rest_replica_log.h
  rgw_rest_role.h
  rgw_rest_s3.h
  rgw_rest_s3website.h
  rgw_rest_swift.h
  rgw_rest_usage.h
  rgw_rest_user.h
  rgw_role.h
  rgw_string.h
  rgw_swift_auth.h
  rgw_sync.h
  rgw_sync_log_trim.h
  rgw_sync_module.h
  rgw_sync_module_aws.h
  rgw_sync_module_es.h
  rgw_sync_module_es_rest.h
  rgw_sync_module_log.h
  rgw_sync_trace.h
  rgw_tag.h
  rgw_tag_s3.h
  rgw_tar.h
  rgw_token.h
  rgw_tools.h
  rgw_torrent.h
  rgw_usage.h
  rgw_user.h
  rgw_website.h
  rgw_xml.h
  librgw.cc
  rgw_acl.cc
  rgw_acl_s3.cc
  rgw_acl_swift.cc
  rgw_aclparser.cc
  rgw_admin.cc
  rgw_asio_client.cc
  rgw_asio_frontend.cc
  rgw_auth.cc
  rgw_auth_keystone.cc
  rgw_auth_s3.cc
  rgw_basic_types.cc
  rgw_bucket.cc
  rgw_cache.cc
  rgw_civetweb.cc
  rgw_civetweb_frontend.cc
  rgw_civetweb_log.cc
  rgw_client_io.cc
  rgw_common.cc
  rgw_compression.cc
  rgw_coroutine.cc
  rgw_cors.cc
  rgw_cors_s3.cc
  rgw_cr_rados.cc
  rgw_cr_rest.cc
  rgw_crypt.cc
  rgw_crypt_sanitize.cc
  rgw_data_sync.cc
  rgw_dencoder.cc
  rgw_env.cc
  rgw_es_main.cc
  rgw_es_query.cc
  rgw_fcgi.cc
  rgw_fcgi_process.cc
  rgw_file.cc
  rgw_formats.cc
  rgw_frontend.cc
  rgw_gc.cc
  rgw_http_client.cc
  rgw_http_client_curl.cc
  rgw_iam_policy.cc
  rgw_json_enc.cc
  rgw_jsonparser.cc
  rgw_keystone.cc
  rgw_lc.cc
  rgw_lc_s3.cc
  rgw_ldap.cc
  rgw_loadgen.cc
  rgw_loadgen_process.cc
  rgw_log.cc
  rgw_main.cc
  rgw_metadata.cc
  rgw_multi.cc
  rgw_multi_del.cc
  rgw_multiparser.cc
  rgw_object_expirer.cc
  rgw_object_expirer_core.cc
  rgw_op.cc
  rgw_orphan.cc
  rgw_os_lib.cc
  rgw_otp.cc
  rgw_period_history.cc
  rgw_period_puller.cc
  rgw_period_pusher.cc
  rgw_policy_s3.cc
  rgw_process.cc
  rgw_quota.cc
  rgw_rados.cc
  rgw_realm_reloader.cc
  rgw_realm_watcher.cc
  rgw_replica_log.cc
  rgw_request.cc
  rgw_reshard.cc
  rgw_resolve.cc
  rgw_rest.cc
  rgw_rest_bucket.cc
  rgw_rest_client.cc
  rgw_rest_config.cc
  rgw_rest_conn.cc
  rgw_rest_log.cc
  rgw_rest_metadata.cc
  rgw_rest_opstate.cc
  rgw_rest_realm.cc
  rgw_rest_replica_log.cc
  rgw_rest_role.cc
  rgw_rest_s3.cc
  rgw_rest_swift.cc
  rgw_rest_usage.cc
  rgw_rest_user.cc
  rgw_role.cc
  rgw_string.cc
  rgw_swift_auth.cc
  rgw_sync.cc
  rgw_sync_log_trim.cc
  rgw_sync_module.cc
  rgw_sync_module_aws.cc
  rgw_sync_module_es.cc
  rgw_sync_module_es_rest.cc
  rgw_sync_module_log.cc
  rgw_sync_trace.cc
  rgw_tag.cc
  rgw_tag_s3.cc
  rgw_token.cc
  rgw_tools.cc
  rgw_torrent.cc
  rgw_usage.cc
  rgw_user.cc
  rgw_website.cc
  rgw_xml.cc
  rgw_xml_enc.cc
 }
 rocksdb=rocksdb {
 }
 script=script {
  ceph-debug-docker.sh
  check_commands.sh
  crash_bdev.sh
  credits.sh
  dep-report.sh
  find_dups_in_pg_log.sh
  kcon_all.sh
  kcon_most.sh
  run_uml.sh
  sepia_bt.sh
  strip_trailing_whitespace.sh
  cmake_uninstall.cmake.in
  ptl-tool.py
  smr_benchmark=smr_benchmark {
   linearCopy.sh
   linearSMRCopy.sh
  }
 }
 spdk=spdk {
 }
 telemetry=telemetry {
  README.md
  server=server {
   ceph_telemetry=ceph_telemetry {
    __init__.py
    app.py
    rest=rest {
     __init__.py
     index.py
     report.py
    }
   }
  }
 }
 test=test {
  admin_socket_output.h
  admin_socket_output_tests.h
  kv_store_bench.h
  omap_bench.h
  perf_helper.h
  gprof-helper.c
  test_c_headers.c
  TestSignalHandlers.cc
  TestTimers.cc
  admin_socket.cc
  admin_socket_output.cc
  admin_socket_output_tests.cc
  barclass.cc
  base64.cc
  bench_log.cc
  bufferlist.cc
  buildtest_skeleton.cc
  ceph_argparse.cc
  ceph_compatset.cc
  ceph_crypto.cc
  confutils.cc
  crypto.cc
  crypto_init.cc
  daemon_config.cc
  encoding.cc
  escape.cc
  fooclass.cc
  formatter.cc
  gather.cc
  heartbeat_map.cc
  kv_store_bench.cc
  libcephfs_config.cc
  librgw_file.cc
  librgw_file_aw.cc
  librgw_file_cd.cc
  librgw_file_gp.cc
  librgw_file_marker.cc
  librgw_file_nfsns.cc
  mime.cc
  multi_stress_watch.cc
  objectstore_bench.cc
  omap_bench.cc
  on_exit.cc
  perf_counters.cc
  perf_helper.cc
  perf_local.cc
  run_cmd.cc
  signals.cc
  simple_spin.cc
  strtol.cc
  test_addrs.cc
  test_admin_socket_output.cc
  test_any.cc
  test_arch.cc
  test_cfuse_cache_invalidate.cc
  test_cors.cc
  test_denc.cc
  test_features.cc
  test_filejournal.cc
  test_get_blkdev_size.cc
  test_intarith.cc
  test_ipaddr.cc
  test_mempool.cc
  test_mutate.cc
  test_pageset.cc
  test_prebufferedstreambuf.cc
  test_rbd_replay.cc
  test_rewrite_latency.cc
  test_rgw_admin_log.cc
  test_rgw_admin_meta.cc
  test_rgw_admin_opstate.cc
  test_rgw_ldap.cc
  test_rgw_token.cc
  test_snap_mapper.cc
  test_str_list.cc
  test_stress_watch.cc
  test_striper.cc
  test_subprocess.cc
  test_texttable.cc
  test_trans.cc
  test_workqueue.cc
  test_xlist.cc
  testclass.cc
  testcrypto.cc
  testkeys.cc
  testmsgr.cc
  unit.cc
  utf8.cc
  xattr_bench.cc
  coverage.sh
  detect-build-env-vars.sh
  docker-test-helper.sh
  docker-test.sh
  rbd-ggate.sh
  run-rbd-unit-tests.sh
  run-rbd-valgrind-unit-tests.sh
  smoke.sh
  test_backfill.sh
  test_common.sh
  test_crush_bucket.sh
  test_csyn.sh
  test_lost.sh
  test_missing_unfound.sh
  test_objectstore_memstore.sh
  test_pidfile.sh
  test_pool_create.sh
  test_pools.sh
  test_rados_tool.sh
  test_rw.sh
  test_split.sh
  test_subman.sh
  test_unfound.sh
  vstart_wrapper.sh
  ObjectMap=ObjectMap {
   KeyValueDBMemory.h
   KeyValueDBMemory.cc
   test_keyvaluedb_atomicity.cc
   test_keyvaluedb_iterators.cc
   test_object_map.cc
  }
  admin_socket=admin_socket {
  }
  alpine-edge=alpine-edge {
   install-deps.sh
   APKBUILD.in
   Dockerfile.in
  }
  centos-7=centos-7 {
   install-deps.sh
   Dockerfile.in
   ceph.spec.in
  }
  cli=cli {
   ceph-authtool=ceph-authtool {
   }
   ceph-conf=ceph-conf {
   }
   ceph-kvstore-tool=ceph-kvstore-tool {
   }
   crushtool=crushtool {
    crush-classes=crush-classes {
    }
   }
   monmaptool=monmaptool {
   }
   osdmaptool=osdmaptool {
   }
   radosgw-admin=radosgw-admin {
   }
   rbd=rbd {
   }
  }
  cli-integration=cli-integration {
   rbd=rbd {
   }
  }
  client=client {
   iozone.sh
   kernel_untar_build.sh
  }
  cls_hello=cls_hello {
   test_cls_hello.cc
  }
  cls_journal=cls_journal {
   test_cls_journal.cc
  }
  cls_lock=cls_lock {
   test_cls_lock.cc
  }
  cls_log=cls_log {
   test_cls_log.cc
  }
  cls_lua=cls_lua {
   test_cls_lua.cc
  }
  cls_numops=cls_numops {
   test_cls_numops.cc
  }
  cls_rbd=cls_rbd {
   test_cls_rbd.cc
  }
  cls_refcount=cls_refcount {
   test_cls_refcount.cc
  }
  cls_replica_log=cls_replica_log {
   test_cls_replica_log.cc
  }
  cls_rgw=cls_rgw {
   test_cls_rgw.cc
  }
  cls_sdk=cls_sdk {
   test_cls_sdk.cc
  }
  cls_statelog=cls_statelog {
   test_cls_statelog.cc
  }
  cls_version=cls_version {
   test_cls_version.cc
  }
  common=common {
   ObjectContents.h
   dns_messages.h
   ObjectContents.cc
   Readahead.cc
   Throttle.cc
   dns_resolve.cc
   get_command_descriptions.cc
   histogram.cc
   test_back_trace.cc
   test_bit_vector.cc
   test_blkdev.cc
   test_bloom_filter.cc
   test_bounded_key_counter.cc
   test_config.cc
   test_context.cc
   test_convenience.cc
   test_crc32c.cc
   test_global_doublefree.cc
   test_hobject.cc
   test_hostname.cc
   test_interval_map.cc
   test_interval_set.cc
   test_io_priority.cc
   test_iso_8601.cc
   test_json_formattable.cc
   test_lru.cc
   test_mclock_priority_queue.cc
   test_mutex.cc
   test_mutex_debug.cc
   test_perf_histogram.cc
   test_prioritized_queue.cc
   test_random.cc
   test_safe_io.cc
   test_shared_cache.cc
   test_sharedptr_registry.cc
   test_shunique_lock.cc
   test_sloppy_crc_map.cc
   test_static_ptr.cc
   test_str_map.cc
   test_tableformatter.cc
   test_time.cc
   test_url_escape.cc
   test_util.cc
   test_weighted_priority_queue.cc
   test_xmlformatter.cc
   test_blkdev_sys_block=test_blkdev_sys_block {
    sys=sys {
     block=block {
      sda=sda {
       device=device {
       }
       queue=queue {
        iosched=iosched {
        }
       }
      }
      sdb=sdb {
       device=device {
       }
       queue=queue {
        iosched=iosched {
        }
       }
      }
     }
    }
   }
  }
  compressor=compressor {
   compressor_example.h
   compressor_plugin_example.cc
   test_compression.cc
  }
  crush=crush {
   CrushWrapper.cc
   crush.cc
   crush_weights.sh
  }
  debian-jessie=debian-jessie {
   install-deps.sh
   Dockerfile.in
   debian=debian {
    source=source {
    }
   }
  }
  direct_messenger=direct_messenger {
   DirectMessenger.h
   DirectMessenger.cc
   test_direct_messenger.cc
  }
  downloads=downloads {
  }
  encoding=encoding {
   test_ceph_time.h
   test_sstring.h
   types.h
   ceph_dencoder.cc
   check-generated.sh
   generate-corpus-objects.sh
   identity.sh
   import-generated.sh
   import.sh
   readable.sh
  }
  erasure-code=erasure-code {
   ErasureCodeExample.h
   ceph_erasure_code_benchmark.h
   ErasureCodePluginExample.cc
   ErasureCodePluginFailToInitialize.cc
   ErasureCodePluginFailToRegister.cc
   ErasureCodePluginHangs.cc
   ErasureCodePluginMissingEntryPoint.cc
   ErasureCodePluginMissingVersion.cc
   TestErasureCode.cc
   TestErasureCodeExample.cc
   TestErasureCodeIsa.cc
   TestErasureCodeJerasure.cc
   TestErasureCodeLrc.cc
   TestErasureCodePlugin.cc
   TestErasureCodePluginIsa.cc
   TestErasureCodePluginJerasure.cc
   TestErasureCodePluginLrc.cc
   TestErasureCodePluginShec.cc
   TestErasureCodeShec.cc
   TestErasureCodeShec_all.cc
   TestErasureCodeShec_arguments.cc
   TestErasureCodeShec_thread.cc
   ceph_erasure_code.cc
   ceph_erasure_code_benchmark.cc
   ceph_erasure_code_non_regression.cc
  }
  fedora-21=fedora-21 {
   install-deps.sh
   Dockerfile.in
   ceph.spec.in
  }
  filestore=filestore {
   TestFileStore.cc
  }
  fio=fio {
   fio_ceph_objectstore.cc
   README.md
   ceph-bluestore.conf
   ceph-filestore.conf
   ceph-memstore.conf
  }
  fs=fs {
   mds_types.cc
  }
  journal=journal {
   RadosTestFixture.h
   RadosTestFixture.cc
   test_Entry.cc
   test_FutureImpl.cc
   test_JournalMetadata.cc
   test_JournalPlayer.cc
   test_JournalRecorder.cc
   test_JournalTrimmer.cc
   test_Journaler.cc
   test_ObjectPlayer.cc
   test_ObjectRecorder.cc
   test_main.cc
   mock=mock {
    MockJournaler.h
    MockJournaler.cc
   }
  }
  lazy-omap-stats=lazy-omap-stats {
   lazy_omap_stats_test.h
   lazy_omap_stats_test.cc
   main.cc
  }
  libcephfs=libcephfs {
   access.cc
   acl.cc
   caps.cc
   deleg.cc
   flock.cc
   main.cc
   multiclient.cc
   readdir_r_cb.cc
   recordlock.cc
   test.cc
  }
  librados=librados {
   TestCase.h
   test.h
   test_common.h
   TestCase.cc
   aio.cc
   asio.cc
   c_read_operations.cc
   c_write_operations.cc
   cls.cc
   cmd.cc
   io.cc
   librados.cc
   librados_config.cc
   list.cc
   lock.cc
   misc.cc
   pool.cc
   service.cc
   snapshots.cc
   stat.cc
   test.cc
   test_common.cc
   tier.cc
   watch_notify.cc
  }
  librados_test_stub=librados_test_stub {
   LibradosTestStub.h
   MockTestMemCluster.h
   MockTestMemIoCtxImpl.h
   MockTestMemRadosClient.h
   TestClassHandler.h
   TestCluster.h
   TestIoCtxImpl.h
   TestMemCluster.h
   TestMemIoCtxImpl.h
   TestMemRadosClient.h
   TestRadosClient.h
   TestWatchNotify.h
   LibradosTestStub.cc
   TestClassHandler.cc
   TestIoCtxImpl.cc
   TestMemCluster.cc
   TestMemIoCtxImpl.cc
   TestMemRadosClient.cc
   TestRadosClient.cc
   TestWatchNotify.cc
  }
  libradosstriper=libradosstriper {
   TestCase.h
   TestCase.cc
   aio.cc
   io.cc
   striping.cc
  }
  librbd=librbd {
   test_fixture.h
   test_mock_fixture.h
   test_support.h
   fsx.cc
   test_BlockGuard.cc
   test_DeepCopy.cc
   test_Groups.cc
   test_ImageWatcher.cc
   test_MirroringWatcher.cc
   test_ObjectMap.cc
   test_Operations.cc
   test_fixture.cc
   test_internal.cc
   test_librbd.cc
   test_main.cc
   test_mirroring.cc
   test_mock_DeepCopyRequest.cc
   test_mock_ExclusiveLock.cc
   test_mock_Journal.cc
   test_mock_ManagedLock.cc
   test_mock_ObjectMap.cc
   test_mock_TrashWatcher.cc
   test_mock_Watcher.cc
   test_mock_fixture.cc
   test_support.cc
   rbdrw.py
   test_notify.py
   deep_copy=deep_copy {
    test_mock_ImageCopyRequest.cc
    test_mock_MetadataCopyRequest.cc
    test_mock_ObjectCopyRequest.cc
    test_mock_SetHeadRequest.cc
    test_mock_SnapshotCopyRequest.cc
    test_mock_SnapshotCreateRequest.cc
   }
   exclusive_lock=exclusive_lock {
    test_mock_PostAcquireRequest.cc
    test_mock_PreAcquireRequest.cc
    test_mock_PreReleaseRequest.cc
   }
   image=image {
    test_mock_CloneRequest.cc
    test_mock_DetachChildRequest.cc
    test_mock_RefreshRequest.cc
    test_mock_RemoveRequest.cc
    test_mock_ValidatePoolRequest.cc
   }
   io=io {
    test_mock_ImageRequest.cc
    test_mock_ImageRequestWQ.cc
    test_mock_ObjectRequest.cc
   }
   journal=journal {
    test_Entries.cc
    test_Replay.cc
    test_mock_OpenRequest.cc
    test_mock_PromoteRequest.cc
    test_mock_Replay.cc
    test_mock_ResetRequest.cc
   }
   managed_lock=managed_lock {
    test_mock_AcquireRequest.cc
    test_mock_BreakRequest.cc
    test_mock_GetLockerRequest.cc
    test_mock_ReacquireRequest.cc
    test_mock_ReleaseRequest.cc
   }
   mirror=mirror {
    test_mock_DisableRequest.cc
   }
   mock=mock {
    MockContextWQ.h
    MockExclusiveLock.h
    MockImageCtx.h
    MockImageState.h
    MockImageWatcher.h
    MockJournal.h
    MockJournalPolicy.h
    MockObjectMap.h
    MockOperations.h
    MockReadahead.h
    MockImageCtx.cc
    MockJournal.cc
    cache=cache {
     MockImageCache.h
    }
    exclusive_lock=exclusive_lock {
     MockPolicy.h
    }
    io=io {
     MockImageRequestWQ.h
     MockObjectDispatch.h
     MockObjectDispatcher.h
    }
   }
   object_map=object_map {
    test_mock_InvalidateRequest.cc
    test_mock_LockRequest.cc
    test_mock_RefreshRequest.cc
    test_mock_ResizeRequest.cc
    test_mock_SnapshotCreateRequest.cc
    test_mock_SnapshotRemoveRequest.cc
    test_mock_SnapshotRollbackRequest.cc
    test_mock_UnlockRequest.cc
    test_mock_UpdateRequest.cc
    mock=mock {
     MockInvalidateRequest.h
    }
   }
   operation=operation {
    test_mock_DisableFeaturesRequest.cc
    test_mock_EnableFeaturesRequest.cc
    test_mock_Request.cc
    test_mock_ResizeRequest.cc
    test_mock_SnapshotCreateRequest.cc
    test_mock_SnapshotProtectRequest.cc
    test_mock_SnapshotRemoveRequest.cc
    test_mock_SnapshotRollbackRequest.cc
    test_mock_SnapshotUnprotectRequest.cc
    test_mock_TrimRequest.cc
   }
   trash=trash {
    test_mock_MoveRequest.cc
    test_mock_RemoveRequest.cc
   }
   watcher=watcher {
    test_mock_RewatchRequest.cc
   }
  }
  mds=mds {
   TestMDSAuthCaps.cc
   TestSessionFilter.cc
  }
  memuse=memuse {
   test_pool_memuse.sh
   test_pool_memuse_tcmalloc.sh
   test_written_pool_memuse.sh
   test_written_pool_memuse_tcmalloc.sh
  }
  messenger=messenger {
   message_helper.h
   simple_dispatcher.h
   xio_dispatcher.h
   simple_client.cc
   simple_dispatcher.cc
   simple_server.cc
   xio_client.cc
   xio_dispatcher.cc
   xio_server.cc
  }
  mgr=mgr {
   mgr-dashboard-smoke.sh
  }
  mon=mon {
   MonMap.cc
   PGMap.cc
   moncap.cc
   test-mon-msg.cc
   test_mon_types.cc
   test_mon_workloadgen.cc
  }
  msgr=msgr {
   perf_msgr_client.cc
   perf_msgr_server.cc
   test_async_driver.cc
   test_async_networkstack.cc
   test_msgr.cc
   test_userspace_event.cc
  }
  objectstore=objectstore {
   DeterministicOpSequence.h
   FileStoreDiff.h
   FileStoreTracker.h
   TestObjectStoreState.h
   store_test_fixture.h
   Allocator_bench.cc
   Allocator_test.cc
   DeterministicOpSequence.cc
   FileStoreDiff.cc
   FileStoreTracker.cc
   ObjectStoreTransactionBenchmark.cc
   TestObjectStoreState.cc
   TestRocksdbOptionParse.cc
   chain_xattr.cc
   fastbmap_allocator_test.cc
   store_test.cc
   store_test_fixture.cc
   test_bluefs.cc
   test_bluestore_types.cc
   test_idempotent.cc
   test_idempotent_sequence.cc
   test_kv.cc
   test_memstore_clone.cc
   test_transaction.cc
   run_seed_to.sh
   run_seed_to_range.sh
  }
  old=old {
   test_seek_read.c
   test_setlayout.c
   test_short_seek_read.c
   test_disk_bw.cc
   testbucket.cc
   testbuffers.cc
   testcounter.cc
   testcrush.cc
   testfilepath.cc
   testmpi.cc
   testnewbuffers.cc
   testtree.cc
   testxattr.cc
  }
  opensuse-13.2=opensuse-13.2 {
   install-deps.sh
   Dockerfile.in
   ceph.spec.in
  }
  os=os {
   TestLFNIndex.cc
  }
  osd=osd {
   Object.h
   RadosModel.h
   TestOpStat.h
   Object.cc
   RadosModel.cc
   TestECBackend.cc
   TestMClockClientQueue.cc
   TestMClockOpClassQueue.cc
   TestOSDMap.cc
   TestOSDScrub.cc
   TestOpStat.cc
   TestPGLog.cc
   TestRados.cc
   hitset.cc
   osdcap.cc
   test_ec_transaction.cc
   test_extent_cache.cc
   test_pg_transaction.cc
   types.cc
   safe-to-destroy.sh
  }
  osdc=osdc {
   FakeWriteback.h
   MemWriteback.h
   FakeWriteback.cc
   MemWriteback.cc
   object_cacher_stress.cc
  }
  pybind=pybind {
   test_ceph_argparse.py
   test_ceph_daemon.py
   test_cephfs.py
   test_rados.py
   test_rbd.py
   test_rgwfs.py
  }
  python=python {
   brag-client=brag-client {
    setup.py
    tests=tests {
     test_ceph_brag.py
    }
   }
   ceph=ceph {
    setup.py
    tests=tests {
     test_ceph.py
    }
   }
   ceph-disk=ceph-disk {
   }
  }
  rbd_mirror=rbd_mirror {
   test_fixture.h
   test_mock_fixture.h
   random_write.cc
   test_ClusterWatcher.cc
   test_ImageDeleter.cc
   test_ImageReplayer.cc
   test_ImageSync.cc
   test_InstanceWatcher.cc
   test_Instances.cc
   test_LeaderWatcher.cc
   test_PoolWatcher.cc
   test_fixture.cc
   test_main.cc
   test_mock_ImageMap.cc
   test_mock_ImageReplayer.cc
   test_mock_ImageSync.cc
   test_mock_ImageSyncThrottler.cc
   test_mock_InstanceReplayer.cc
   test_mock_InstanceWatcher.cc
   test_mock_LeaderWatcher.cc
   test_mock_PoolWatcher.cc
   test_mock_fixture.cc
   image_deleter=image_deleter {
    test_mock_SnapshotPurgeRequest.cc
    test_mock_TrashMoveRequest.cc
    test_mock_TrashRemoveRequest.cc
    test_mock_TrashWatcher.cc
   }
   image_map=image_map {
    test_Policy.cc
   }
   image_replayer=image_replayer {
    test_mock_BootstrapRequest.cc
    test_mock_CreateImageRequest.cc
    test_mock_EventPreprocessor.cc
    test_mock_GetMirrorImageIdRequest.cc
    test_mock_PrepareLocalImageRequest.cc
    test_mock_PrepareRemoteImageRequest.cc
   }
   image_sync=image_sync {
    test_mock_SyncPointCreateRequest.cc
    test_mock_SyncPointPruneRequest.cc
   }
   mock=mock {
    MockContextWQ.h
    MockSafeTimer.h
   }
   pool_watcher=pool_watcher {
    test_mock_RefreshImagesRequest.cc
   }
  }
  rgw=rgw {
   test_rgw_common.h
   test_http_manager.cc
   test_rgw_bencode.cc
   test_rgw_common.cc
   test_rgw_compression.cc
   test_rgw_crypto.cc
   test_rgw_iam_policy.cc
   test_rgw_manifest.cc
   test_rgw_obj.cc
   test_rgw_period_history.cc
   test_rgw_string.cc
   test-rgw-call.sh
   test-rgw-common.sh
   test-rgw-meta-sync.sh
   test-rgw-multisite.sh
   test_multen.py
   test_multi.py
   rgw_multi=rgw_multi {
    __init__.py
    conn.py
    multisite.py
    tests.py
    tests_es.py
    tools.py
    zone_cloud.py
    zone_es.py
    zone_rados.py
   }
  }
  system=system {
   cross_process_sem.h
   st_rados_create_pool.h
   st_rados_delete_objs.h
   st_rados_delete_pool.h
   st_rados_list_objects.h
   st_rados_notify.h
   st_rados_watch.h
   systest_runnable.h
   systest_settings.h
   cross_process_sem.cc
   rados_delete_pools_parallel.cc
   rados_list_parallel.cc
   rados_open_pools_parallel.cc
   rados_watch_notify.cc
   st_rados_create_pool.cc
   st_rados_delete_objs.cc
   st_rados_delete_pool.cc
   st_rados_list_objects.cc
   st_rados_notify.cc
   st_rados_watch.cc
   systest_runnable.cc
   systest_settings.cc
   rerun.sh
  }
  ubuntu-16.04=ubuntu-16.04 {
   install-deps.sh
   Dockerfile.in
   debian=debian {
    source=source {
    }
   }
  }
  ubuntu-17.04=ubuntu-17.04 {
   install-deps.sh
   Dockerfile.in
   debian=debian {
    source=source {
    }
   }
  }
 }
 tools=tools {
  RadosDump.h
  ceph_objectstore_tool.h
  rebuild_mondb.h
  scratchtool.c
  RadosDump.cc
  ceph-client-debug.cc
  ceph_authtool.cc
  ceph_conf.cc
  ceph_kvstore_tool.cc
  ceph_monstore_tool.cc
  ceph_objectstore_tool.cc
  ceph_osdomap_tool.cc
  crushtool.cc
  monmaptool.cc
  osdmaptool.cc
  psim.cc
  radosacl.cc
  rebuild_mondb.cc
  scratchtoolpp.cc
  ceph-monstore-update-crush.sh
  setup-virtualenv.sh
  histogram_dump.py
  ceph-lazy=ceph-lazy {
   bash_completion.d=bash_completion.d {
   }
  }
  cephfs=cephfs {
   DataScan.h
   Dumper.h
   EventOutput.h
   JournalFilter.h
   JournalScanner.h
   JournalTool.h
   MDSUtility.h
   PgFiles.h
   Resetter.h
   RoleSelector.h
   TableTool.h
   DataScan.cc
   Dumper.cc
   EventOutput.cc
   JournalFilter.cc
   JournalScanner.cc
   JournalTool.cc
   MDSUtility.cc
   PgFiles.cc
   Resetter.cc
   RoleSelector.cc
   TableTool.cc
   cephfs-data-scan.cc
   cephfs-journal-tool.cc
   cephfs-table-tool.cc
  }
  rados=rados {
   PoolDump.h
   RadosImport.h
   PoolDump.cc
   RadosImport.cc
   rados.cc
  }
  rbd=rbd {
   ArgumentTypes.h
   IndentStream.h
   OptionPrinter.h
   Shell.h
   Utils.h
   ArgumentTypes.cc
   IndentStream.cc
   OptionPrinter.cc
   Shell.cc
   Utils.cc
   rbd.cc
   action=action {
    Bench.cc
    Children.cc
    Clone.cc
    Copy.cc
    Create.cc
    Device.cc
    Diff.cc
    DiskUsage.cc
    Export.cc
    Feature.cc
    Flatten.cc
    Ggate.cc
    Group.cc
    ImageMeta.cc
    Import.cc
    Info.cc
    Journal.cc
    Kernel.cc
    List.cc
    Lock.cc
    MergeDiff.cc
    MirrorImage.cc
    MirrorPool.cc
    Nbd.cc
    ObjectMap.cc
    Pool.cc
    Remove.cc
    Rename.cc
    Resize.cc
    Snap.cc
    Status.cc
    Trash.cc
    Watch.cc
   }
  }
  rbd_ggate=rbd_ggate {
   Driver.h
   Request.h
   Server.h
   Watcher.h
   debug.h
   ggate_drv.h
   ggate_drv.c
   Driver.cc
   Server.cc
   Watcher.cc
   debug.cc
   main.cc
  }
  rbd_mirror=rbd_mirror {
   BaseRequest.h
   ClusterWatcher.h
   ImageDeleter.h
   ImageMap.h
   ImageReplayer.h
   ImageSync.h
   ImageSyncThrottler.h
   InstanceReplayer.h
   InstanceWatcher.h
   Instances.h
   LeaderWatcher.h
   Mirror.h
   MirrorStatusWatcher.h
   PoolReplayer.h
   PoolWatcher.h
   ProgressContext.h
   ServiceDaemon.h
   Threads.h
   types.h
   ClusterWatcher.cc
   ImageDeleter.cc
   ImageMap.cc
   ImageReplayer.cc
   ImageSync.cc
   ImageSyncThrottler.cc
   InstanceReplayer.cc
   InstanceWatcher.cc
   Instances.cc
   LeaderWatcher.cc
   Mirror.cc
   MirrorStatusWatcher.cc
   PoolReplayer.cc
   PoolWatcher.cc
   ServiceDaemon.cc
   Threads.cc
   main.cc
   types.cc
   image_deleter=image_deleter {
    SnapshotPurgeRequest.h
    TrashMoveRequest.h
    TrashRemoveRequest.h
    TrashWatcher.h
    Types.h
    SnapshotPurgeRequest.cc
    TrashMoveRequest.cc
    TrashRemoveRequest.cc
    TrashWatcher.cc
   }
   image_map=image_map {
    LoadRequest.h
    Policy.h
    SimplePolicy.h
    StateTransition.h
    Types.h
    UpdateRequest.h
    LoadRequest.cc
    Policy.cc
    SimplePolicy.cc
    StateTransition.cc
    Types.cc
    UpdateRequest.cc
   }
   image_replayer=image_replayer {
    BootstrapRequest.h
    CloseImageRequest.h
    CreateImageRequest.h
    EventPreprocessor.h
    GetMirrorImageIdRequest.h
    IsPrimaryRequest.h
    OpenImageRequest.h
    OpenLocalImageRequest.h
    PrepareLocalImageRequest.h
    PrepareRemoteImageRequest.h
    ReplayStatusFormatter.h
    Types.h
    BootstrapRequest.cc
    CloseImageRequest.cc
    CreateImageRequest.cc
    EventPreprocessor.cc
    GetMirrorImageIdRequest.cc
    IsPrimaryRequest.cc
    OpenImageRequest.cc
    OpenLocalImageRequest.cc
    PrepareLocalImageRequest.cc
    PrepareRemoteImageRequest.cc
    ReplayStatusFormatter.cc
   }
   image_sync=image_sync {
    SyncPointCreateRequest.h
    SyncPointPruneRequest.h
    SyncPointCreateRequest.cc
    SyncPointPruneRequest.cc
   }
   instance_watcher=instance_watcher {
    Types.h
    Types.cc
   }
   instances=instances {
    Types.h
   }
   leader_watcher=leader_watcher {
    Types.h
    Types.cc
   }
   pool_watcher=pool_watcher {
    RefreshImagesRequest.h
    Types.h
    RefreshImagesRequest.cc
   }
   service_daemon=service_daemon {
    Types.h
    Types.cc
   }
  }
  rbd_nbd=rbd_nbd {
   rbd-nbd.cc
  }
  rbd_recover_tool=rbd_recover_tool {
   test_rbd_recover_tool.sh
   config=config {
   }
  }
  rgw=rgw {
   parse-cr-dump.py
  }
 }
 tracing=tracing {
  tracing-common.h
  cyg_profile.c
  cyg_profile_functions.c
  eventtrace.c
  librados.c
  librbd.c
  objectstore.c
  oprequest.c
  osd.c
  pg.c
  rgw_op.c
  rgw_rados.c
  README.md
 }
 upstart=upstart {
  ceph-all.conf
  ceph-disk.conf
  ceph-mds-all-starter.conf
  ceph-mds-all.conf
  ceph-mds.conf
  ceph-mgr-all-starter.conf
  ceph-mgr-all.conf
  ceph-mgr.conf
  ceph-mon-all-starter.conf
  ceph-mon-all.conf
  ceph-mon.conf
  ceph-osd-all-starter.conf
  ceph-osd-all.conf
  ceph-osd.conf
  ceph-rbd-mirror-all-starter.conf
  ceph-rbd-mirror-all.conf
  ceph-rbd-mirror.conf
  radosgw-all-starter.conf
  radosgw-all.conf
  radosgw.conf
  rbdmap.conf
 }
 xxHash=xxHash {
 }
 zstd=zstd {
 }
}
ceph-deploy=/root/projects/ceph-deploy/ceph_deploy CD=. filter="*" {
 __init__.py
 admin.py
 calamari.py
 cli.py
 cliutil.py
 config.py
 connection.py
 exc.py
 forgetkeys.py
 gatherkeys.py
 install.py
 mds.py
 mgr.py
 misc.py
 mon.py
 new.py
 osd.py
 pkg.py
 repo.py
 rgw.py
 tags
 validate.py
 conf=conf {
  __init__.py
  ceph.py
  cephdeploy.py
 }
 hosts=hosts {
  __init__.py
  common.py
  remotes.py
  util.py
  arch=arch {
   __init__.py
   install.py
   uninstall.py
   mon=mon {
    __init__.py
   }
  }
  centos=centos {
   __init__.py
   install.py
   uninstall.py
   mon=mon {
    __init__.py
   }
  }
  debian=debian {
   __init__.py
   install.py
   uninstall.py
   mon=mon {
    __init__.py
   }
  }
  fedora=fedora {
   __init__.py
   install.py
   uninstall.py
   mon=mon {
    __init__.py
   }
  }
  rhel=rhel {
   __init__.py
   install.py
   uninstall.py
   mon=mon {
    __init__.py
   }
  }
  suse=suse {
   __init__.py
   install.py
   uninstall.py
   mon=mon {
    __init__.py
   }
  }
 }
 lib=lib {
  __init__.py
  vendor=vendor {
   __init__.py
  }
 }
 tests=tests {
  __init__.py
  conftest.py
  directory.py
  fakes.py
  test_cli_admin.py
  test_cli_mon.py
  test_cli_new.py
  test_cli_rgw.py
  test_conf.py
  test_gather_keys.py
  test_gather_keys_missing.py
  test_gather_keys_with_mon.py
  test_install.py
  test_keys_equivalent.py
  test_mon.py
  test_remotes.py
  util.py
  parser=parser {
   __init__.py
   test_admin.py
   test_calamari.py
   test_config.py
   test_disk.py
   test_gatherkeys.py
   test_install.py
   test_main.py
   test_mds.py
   test_mon.py
   test_new.py
   test_osd.py
   test_pkg.py
   test_purge.py
   test_purgedata.py
   test_repo.py
   test_rgw.py
   test_uninstall.py
  }
  unit=unit {
   test_calamari.py
   test_cli.py
   test_conf.py
   test_exc.py
   test_mon.py
   test_new.py
   hosts=hosts {
    test_centos.py
    test_common.py
    test_hosts.py
    test_remotes.py
    test_suse.py
    test_util.py
   }
   util=util {
    test_arg_validators.py
    test_constants.py
    test_net.py
    test_packages.py
    test_paths.py
    test_pkg_managers.py
    test_system.py
    test_templates.py
   }
  }
 }
 util=util {
  __init__.py
  arg_validators.py
  constants.py
  decorators.py
  files.py
  help_formatters.py
  log.py
  net.py
  packages.py
  pkg_managers.py
  ssh.py
  system.py
  templates.py
  versions.py
  paths=paths {
   __init__.py
   gpg.py
   mon.py
   osd.py
  }
 }
}
